C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CHINESE_FONT_LIB
OBJECT MODULE PLACED IN .\Objects\Chinese_Font_Lib.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Chinese_Font_Lib.C LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\Chinese_Font_Lib.lst) TABS(2) OBJECT(.\Objects\Chinese_Font_Lib.obj)

line level    source

   1          #include "Chinese_Font_Lib.H"
   2          
   3          
   4          void Font_Lib_Chip_Spi_Write(unsigned char Write_Data);
   5          unsigned char Font_Lib_Chip_Spi_Read(void);
   6          unsigned long Read_Font_Lib(unsigned char Font_Num,unsigned int FontCode,unsigned char *Data_Pointer);
   7          void Init_Chinese_Font_Lib(void);
   8          unsigned int Read_Font_Lib_From_C_Array(unsigned char Font_Num,unsigned char ASCII_Code,unsigned char *Dat
             -a_Pointer);
   9          
  10          
  11          
  12          
  13          unsigned int Read_Font_Lib_From_C_Array(unsigned char Font_Num,unsigned char ASCII_Code,unsigned char *Dat
             -a_Pointer);
  14          unsigned char Font_Buffer[32*4+2];
  15          
  16          //       STC单片机Px口设置
  17          //  -------------+-------------+-----------
  18          //    PxM1[7:0]  |  PxM0[7:0]  |    功能
  19          //  -------------+-------------+-----------
  20          //          0    |      0      |  准双向
  21          //  -------------+-------------+-----------
  22          //          0    |      1      |  推挽输出
  23          //  -------------+-------------+-----------
  24          //          1    |      0      |  高阻输入
  25          //  -------------+-------------+-----------
  26          //          1    |      1      |  开漏输出
  27          
  28          void Init_Chinese_Font_Lib(void)
  29          {
  30   1      
  31   1        P4M0&=0x74;
  32   1        P4M1&=0x74;
  33   1          Font_Lib_Chip_CS=1;
  34   1        Font_Lib_Chip_SCK = 0;
  35   1          Font_Lib_Chip_SO=1;
  36   1      }
  37          
  38          //以串行SPI方式写一个数据字节（命令）至汉字库芯片
  39          void Font_Lib_Chip_Spi_Write(unsigned char Write_Data)
  40          {
  41   1        unsigned char i;
  42   1        for (i=0;i<8;i++)
  43   1        {
  44   2          Font_Lib_Chip_SCK=0;
  45   2          if ((Write_Data&0x80)!=0)
  46   2          {
  47   3            Font_Lib_Chip_SI=1;
  48   3          }
  49   2          else
  50   2          {
  51   3            Font_Lib_Chip_SI=0;
  52   3          }
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 2   

  53   2          Write_Data=(Write_Data<<1);
  54   2          Font_Lib_Chip_SCK=1;
  55   2        } 
  56   1      }
  57          
  58          //以串行SPI方式从汉字库芯片中读一个数据字节
  59          unsigned char Font_Lib_Chip_Spi_Read(void)
  60          {
  61   1        unsigned char i,Read_Data=0;
  62   1        Font_Lib_Chip_SO=1;
  63   1        for (i=0;i<8;i++)
  64   1        {
  65   2          Read_Data=(Read_Data<<1);
  66   2          Font_Lib_Chip_SCK=0;
  67   2          if (Font_Lib_Chip_SO==1)
  68   2          {
  69   3            Read_Data=Read_Data+1;
  70   3          }
  71   2          else
  72   2          {
  73   3            Read_Data=Read_Data+0;
  74   3          }
  75   2          Font_Lib_Chip_SCK=1;
  76   2        } 
  77   1        return Read_Data;
  78   1      }
  79          
  80          //读字库
  81          //返回值：D31-D24=? ,D31-D24=? ,D15-D8=M ,D7-D0=Font_Width(N)
  82          unsigned long Read_Font_Lib(unsigned char Font_Num,unsigned int FontCode,unsigned char *Data_Pointer)
  83          {
  84   1        unsigned char ASCIICode,M,N;    //M（点阵高度）、N（点阵宽度）
  85   1        unsigned char Font_Data_Length;   //字体点阵的数据长度（字节数）
  86   1        unsigned char MSB,LSB;        //汉字编码高低8位、低8位
  87   1        unsigned int Font_Width;      //字体点阵的宽度
  88   1        
  89   1        unsigned long BaseAdd,Font_Start_Address;//待查字体点阵的基地址、起始地址
  90   1        unsigned char Arial_Time_Char_flag;//字体点阵不等宽标志（仅对Arial、Time字体有效）
  91   1        
  92   1        ASCIICode=FontCode&0x007f;  //待查字体点阵的ASCII码
  93   1      
  94   1        MSB=((unsigned long)FontCode>>8)&0x00ff;  //待查字体点阵的汉字编码高8位
  95   1        LSB=(unsigned long)FontCode&0x00ff;   //待查字体点阵的汉字编码低8位
  96   1          
  97   1          Arial_Time_Char_flag=0;   //清字体点阵不等宽标志（仅对Arial、Time字体有效）
  98   1      
  99   1        //根据选择的字体确定M（点阵高）、N（点阵宽）、Font_Start_Address、Font_Data_Length
 100   1        switch (Font_Num)
 101   1        {
 102   2          case  HZ_12x12://1
 103   2          {
 104   3            M=12;N=12;
 105   3            Font_Width=N;
 106   3            BaseAdd=HZ_12x12_START_ADDR;
 107   3      
 108   3            if(MSB >=0xA1 && MSB <= 0Xa9 && LSB >=0xA1)
 109   3              Font_Start_Address =((MSB - 0xA1) * 94L + (LSB - 0xA1))*24L+ BaseAdd;
 110   3            else if(MSB >=0xB0 && MSB <= 0xF7 && LSB >=0xA1)
 111   3              Font_Start_Address = ((MSB - 0xB0) * 94L + (LSB - 0xA1)+ 846)*24L+ BaseAdd;
 112   3            
 113   3            Font_Data_Length=M*((N+7)/8);
 114   3            break;  
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 3   

 115   3          }
 116   2          case  HZ_16x16://2
 117   2          {
 118   3            M=16;N=16;
 119   3            Font_Width=N;
 120   3            BaseAdd=HZ_16x16_START_ADDR;
 121   3      
 122   3            if(MSB >=0xA1 && MSB <= 0Xa9 && LSB >=0xA1)  
 123   3               Font_Start_Address=((MSB - 0xA1)* 94L + (LSB - 0xA1))*32L+ BaseAdd;
 124   3            else 
 125   3              if(MSB >=0xB0 && MSB <= 0xF7 && LSB >=0xA1)    
 126   3                Font_Start_Address = ((MSB - 0xB0) * 94L + (LSB - 0xA1)+ 846)*32L+ BaseAdd;
 127   3            
 128   3            Font_Data_Length=M*((N+7)/8);
 129   3            break;  
 130   3          }
 131   2      
 132   2          case  HZ_24x24://3
 133   2          {
 134   3            M=24;N=24;
 135   3            Font_Width=N;
 136   3            BaseAdd=HZ_24x24_START_ADDR;
 137   3      
 138   3            if(MSB >=0xA1 && MSB <= 0Xa9 && LSB >=0xA1)  
 139   3              Font_Start_Address =( (MSB - 0xA1) * 94L + (LSB - 0xA1))*72L+ BaseAdd;
 140   3            else 
 141   3              if(MSB >=0xB0 && MSB <= 0xF7 && LSB >=0xA1)    
 142   3                Font_Start_Address = ((MSB - 0xB0) * 94L + (LSB - 0xA1)+ 846)*72L+ BaseAdd;     
 143   3            
 144   3              Font_Data_Length=M*((N+7)/8);
 145   3            break;  
 146   3          }
 147   2      
 148   2          case  HZ_32x32://4
 149   2          {
 150   3            M=32;N=32;
 151   3            Font_Width=N;
 152   3            BaseAdd=HZ_32x32_START_ADDR;
 153   3            
 154   3            if(MSB >=0xA1 && MSB <= 0Xa9 && LSB >=0xA1)  
 155   3              Font_Start_Address =( (MSB - 0xA1) * 94L + (LSB - 0xA1))*128L+ BaseAdd;
 156   3            else 
 157   3              if(MSB >=0xB0 && MSB <= 0xF7 && LSB >=0xA1)    
 158   3                Font_Start_Address = ((MSB - 0xB0) * 94L + (LSB - 0xA1)+ 846)*128L+ BaseAdd;      
 159   3      
 160   3              Font_Data_Length=M*((N+7)/8);
 161   3            break;  
 162   3          }
 163   2      
 164   2          case  HZ_EXT_CHAR_6x12://5
 165   2          {
 166   3            M=12;N=6;
 167   3            Font_Width=N;
 168   3            BaseAdd=HZ_EXT_CHAR_6x12_START_ADDR;
 169   3            
 170   3            if (FontCode>= 0xAAA1 && FontCode<=0xAAFE )   
 171   3              Font_Start_Address=(FontCode-0xAAA1) * 12L+BaseAdd; 
 172   3            else 
 173   3              if(FontCode>= 0xABA1 && FontCode<=0xABC0 )   
 174   3                Font_Start_Address = (FontCode-0xABA1 + 95) * 12L+BaseAdd;
 175   3      
 176   3            Font_Data_Length=M*((N+7)/8);
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 4   

 177   3            break;  
 178   3          }
 179   2      
 180   2          case  ASCII_6x12://6
 181   2          {
 182   3            M=12;N=6;
 183   3            Font_Width=N;
 184   3            BaseAdd=ASCII_6x12_START_ADDR;
 185   3            
 186   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 187   3                      Font_Start_Address = (ASCIICode-0x20 ) * 12L+BaseAdd;
 188   3      
 189   3            Font_Data_Length=M*((N+7)/8);
 190   3            break;  
 191   3          }
 192   2      
 193   2          case  ASC_Arial_12://7
 194   2          {
 195   3            Arial_Time_Char_flag=1;
 196   3            M=12;N=12;
 197   3            Font_Width=N;
 198   3            BaseAdd=ASC_Arial_12_START_ADDR;
 199   3            
 200   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 201   3                      Font_Start_Address = (ASCIICode-0x20 ) * 26L+BaseAdd;
 202   3      
 203   3            Font_Data_Length=M*((N+7)/8);
 204   3            break;  
 205   3          }
 206   2      
 207   2          case  ASC_Time_12://8
 208   2          {
 209   3            Arial_Time_Char_flag=1;
 210   3            M=12;N=12;
 211   3            Font_Width=N;
 212   3            BaseAdd=ASC_Time_12_START_ADDR;
 213   3            
 214   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 215   3                      Font_Start_Address = (ASCIICode-0x20 ) * 26L+BaseAdd;
 216   3      
 217   3            Font_Data_Length=M*((N+7)/8);
 218   3            break;  
 219   3          }
 220   2      
 221   2          case  HZ_EXT_CHAR_8x16://9
 222   2          {
 223   3            M=16;N=8;
 224   3            Font_Width=N;
 225   3            BaseAdd=HZ_EXT_CHAR_8x16_START_ADDR;
 226   3            
 227   3                  if (FontCode>= 0xAAA1 && FontCode<=0xAAFE )
 228   3                      Font_Start_Address = (FontCode-0xAAA1 ) * 16L+BaseAdd;
 229   3                  else 
 230   3                      if(FontCode>= 0xABA1 && FontCode<=0xABC0 )
 231   3                          Font_Start_Address = (FontCode-0xABA1 + 95) * 16L+BaseAdd;
 232   3      
 233   3            Font_Data_Length=M*((N+7)/8);
 234   3            break;  
 235   3          }
 236   2      
 237   2          case  ASCII_8x16://10
 238   2          {
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 5   

 239   3            M=16;N=8;
 240   3            Font_Width=N;
 241   3            BaseAdd=ASCII_8x16_START_ADDR;
 242   3            
 243   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 244   3                      Font_Start_Address = (ASCIICode-0x20 ) * 16L+BaseAdd;
 245   3      
 246   3            Font_Data_Length=M*((N+7)/8);
 247   3            break;  
 248   3          }
 249   2      
 250   2          case  ASCII_5x7://11
 251   2          {
 252   3            M=7;N=5;
 253   3            Font_Width=N;
 254   3            BaseAdd=ASCII_5x7_START_ADDR;
 255   3            
 256   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 257   3                      Font_Start_Address = (ASCIICode-0x20 ) * 8L+BaseAdd;
 258   3      
 259   3            Font_Data_Length=M*((N+7)/8);
 260   3            break;  
 261   3          }
 262   2      
 263   2          case  ASCII_7x8://12
 264   2          {
 265   3            M=8;N=7;
 266   3            Font_Width=N;
 267   3            BaseAdd=ASCII_7x8_START_ADDR;
 268   3            
 269   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 270   3                      Font_Start_Address = (ASCIICode-0x20 ) * 8L+BaseAdd;
 271   3      
 272   3            Font_Data_Length=M*((N+7)/8);
 273   3            break;  
 274   3          }
 275   2      
 276   2          case  ASC_Arial_16://13
 277   2          {
 278   3            Arial_Time_Char_flag=1;
 279   3            M=16;N=16;
 280   3            Font_Width=N;
 281   3            BaseAdd=ASC_Arial_16_START_ADDR;
 282   3            
 283   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 284   3                      Font_Start_Address = (ASCIICode-0x20 ) * 34L+BaseAdd;
 285   3      
 286   3            Font_Data_Length=M*((N+7)/8);
 287   3            break;  
 288   3          }
 289   2      
 290   2          case  ASC_Time_16://14
 291   2          {
 292   3            Arial_Time_Char_flag=1;
 293   3            M=16;N=16;
 294   3            Font_Width=N;
 295   3            BaseAdd=ASC_Time_16_START_ADDR;
 296   3            
 297   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 298   3                      Font_Start_Address = (ASCIICode-0x20 ) * 34L+BaseAdd;
 299   3      
 300   3            Font_Data_Length=M*((N+7)/8);
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 6   

 301   3            break;  
 302   3          }
 303   2      
 304   2          case  HZ_EXT_CHAR_12x24://15
 305   2          {
 306   3            M=24;N=12;
 307   3            Font_Width=N;
 308   3                  if (FontCode>= 0xAAA1 && FontCode<=0xAAFE )   
 309   3                      Font_Start_Address = (FontCode-0xAAA1 ) * 48L+BaseAdd; 
 310   3                  else 
 311   3                      if(FontCode>= 0xABA1 && FontCode<=0xABC0 )   
 312   3                          Font_Start_Address = (FontCode-0xABA1 + 95) * 48L+BaseAdd;
 313   3      
 314   3              Font_Data_Length=M*((N+7)/8);
 315   3            break;  
 316   3          }
 317   2      
 318   2          case  ASCII_12x24://16
 319   2          {
 320   3            M=24;N=12;
 321   3            Font_Width=N;
 322   3            BaseAdd=ASCII_12x24_START_ADDR;
 323   3            
 324   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 325   3                      Font_Start_Address = (ASCIICode-0x20 )*48L+BaseAdd;
 326   3      
 327   3            Font_Data_Length=M*((N+7)/8);
 328   3            break;  
 329   3          }
 330   2      
 331   2          case  ASC_Arial_24://17
 332   2          {
 333   3            Arial_Time_Char_flag=1;
 334   3            M=24;N=24;
 335   3            Font_Width=N;
 336   3            BaseAdd=ASC_Arial_24_START_ADDR;
 337   3            
 338   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 339   3                      Font_Start_Address = (ASCIICode-0x20 ) * 74L+BaseAdd;
 340   3      
 341   3            Font_Data_Length=M*((N+7)/8);
 342   3            break;  
 343   3          }
 344   2      
 345   2          case  ASC_Time_24://18
 346   2          {
 347   3            Arial_Time_Char_flag=1;
 348   3            M=24;N=24;
 349   3            Font_Width=N;
 350   3            BaseAdd=ASC_Time_24_START_ADDR;
 351   3            
 352   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 353   3                      Font_Start_Address = (ASCIICode-0x20 ) * 74L+BaseAdd;
 354   3      
 355   3            Font_Data_Length=M*((N+7)/8);
 356   3            break;  
 357   3          }
 358   2      
 359   2          case  HZ_EXT_CHAR_16x32://19
 360   2          {
 361   3            M=32;N=16;
 362   3            Font_Width=N;
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 7   

 363   3            BaseAdd=HZ_EXT_CHAR_16x32_START_ADDR;
 364   3       
 365   3                  if (FontCode>= 0xAAA1 && FontCode<=0xAAFE )   
 366   3                      Font_Start_Address = (FontCode-0xAAA1 ) * 64L+BaseAdd; 
 367   3                  else 
 368   3                      if(FontCode>= 0xABA1 && FontCode<=0xABC0 )   
 369   3                          Font_Start_Address = (FontCode-0xABA1 + 95) * 64L+BaseAdd;
 370   3      
 371   3              Font_Data_Length=M*((N+7)/8);
 372   3            break;  
 373   3          }
 374   2      
 375   2          case  ASCII_16x32://20
 376   2          {
 377   3            M=32;N=16;
 378   3            Font_Width=N;
 379   3            BaseAdd=ASCII_16x32_START_ADDR;
 380   3            
 381   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 382   3                      Font_Start_Address = (ASCIICode-0x20 )*64L+BaseAdd;
 383   3      
 384   3            Font_Data_Length=M*((N+7)/8);
 385   3            break;  
 386   3          }
 387   2      
 388   2          case  ASC_Arial_32://21
 389   2          {
 390   3            Arial_Time_Char_flag=1;
 391   3            M=32;N=32;
 392   3            Font_Width=N;
 393   3            BaseAdd=ASC_Arial_32_START_ADDR;
 394   3            
 395   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 396   3                      Font_Start_Address = (ASCIICode-0x20 ) * 130L+BaseAdd;
 397   3      
 398   3            Font_Data_Length=M*((N+7)/8);
 399   3            break;  
 400   3          }
 401   2      
 402   2          case  ASC_Time_32://22
 403   2          {
 404   3            Arial_Time_Char_flag=1;
 405   3            M=32;N=32;
 406   3            Font_Width=N;
 407   3            BaseAdd=ASC_Time_32_START_ADDR;
 408   3            
 409   3                  if (ASCIICode >= 0x20 && ASCIICode <= 0x7E)    
 410   3                      Font_Start_Address = (ASCIICode-0x20 ) * 130L+BaseAdd;
 411   3      
 412   3            Font_Data_Length=M*((N+7)/8);
 413   3            break;  
 414   3          }
 415   2      
 416   2          case  HZ_SPECIAL_CHAR_8x16://24
 417   2          {
 418   3            M=16;N=8;
 419   3            Font_Width=N;
 420   3            BaseAdd=HZ_SPECIAL_CHAR_8x16_START_ADDR;
 421   3            
 422   3                  if (FontCode >= 0xACA1 && FontCode <=0xACDF )   
 423   3                      Font_Start_Address = (FontCode-0xACA1 ) * 16L+BaseAdd;
 424   3      
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 8   

 425   3            Font_Data_Length=M*((N+7)/8);
 426   3            break;  
 427   3          }
 428   2      
 429   2          default:
 430   2            break;
 431   2        }
 432   1        
 433   1        //读字库操作
 434   1      //  Font_Lib_Chip_HOLD=1;
 435   1      //  Font_Lib_Chip_WP=1;
 436   1        //送字库起始地址
 437   1        Font_Lib_Chip_CS = 0; //字库芯片片选使能
 438   1        Font_Lib_Chip_Spi_Write(0x03); 
 439   1        Font_Lib_Chip_Spi_Write((Font_Start_Address&0xff0000)>>16);   //地址的高 8 位,共 24 位 
 440   1        Font_Lib_Chip_Spi_Write((Font_Start_Address&0xff00)>>8);     //地址的中 8 位,共 24 位 
 441   1        Font_Lib_Chip_Spi_Write(Font_Start_Address&0xff);         //地址的低 8 位,共 24 位 
 442   1      
 443   1        //如是不等宽字体先读2个字节的点阵宽度
 444   1        if (Arial_Time_Char_flag==1)
 445   1        {
 446   2            Font_Width=(Font_Lib_Chip_Spi_Read())<<8;
 447   2            Font_Width=Font_Width+Font_Lib_Chip_Spi_Read();
 448   2        }    
 449   1      
 450   1        //读指定长度的点阵数据送*Data_Pointer(Data_Pointer指向的数组)
 451   1        while (Font_Data_Length!=0)
 452   1        {
 453   2          
 454   2          *Data_Pointer=Font_Lib_Chip_Spi_Read();
 455   2          Data_Pointer++;
 456   2          Font_Data_Length--;
 457   2        }
 458   1        Font_Lib_Chip_CS = 1;           //字库芯片片选禁止
 459   1        Font_Width=(M<<8)+Font_Width;
 460   1        return Font_Width;
 461   1      }
 462          
 463          
 464          
 465          
 466          //读字库
 467          unsigned int Read_Font_Lib_From_C_Array(unsigned char Font_Num,unsigned char ASCII_Code,unsigned char *Dat
             -a_Pointer)
 468          {
 469   1        unsigned char M,N;    //M（点阵高度）、N（点阵宽度）
 470   1        unsigned char Font_Data_Length;   //字体点阵的数据长度（字节数）
 471   1        unsigned int Font_Width;      //字体点阵的宽度
 472   1        
 473   1        unsigned char  *BaseAdd,*Font_Start_Address;//待查字体点阵的基地址、起始地址
 474   1        
 475   1        ASCII_Code=ASCII_Code;  //待查字体点阵的ASCII码
 476   1      
 477   1        //根据选择的字体确定M（点阵高）、N（点阵宽）、Font_Start_Address、Font_Data_Length
 478   1        switch (Font_Num)
 479   1        {
 480   2          case  ASC_7x5://1
 481   2          {
 482   3            M=7;N=5;
 483   3            Font_Width=N;
 484   3            BaseAdd=Ascii_Font_7x5;
*** WARNING C182 IN LINE 484 OF Chinese_Font_Lib.C: pointer to different objects
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 9   

 485   3            Font_Start_Address =BaseAdd+ (ASCII_Code - ' ') * M ;
 486   3            Font_Data_Length=M*((N+7)/8);
 487   3            break;  
 488   3          }
 489   2          case  ASC_8x6://1
 490   2          {
 491   3            M=8;N=6;
 492   3            Font_Width=N;
 493   3            BaseAdd=Ascii_Font_8x6;
*** WARNING C182 IN LINE 493 OF Chinese_Font_Lib.C: pointer to different objects
 494   3            Font_Start_Address =BaseAdd+ (ASCII_Code - ' ') * M ;
 495   3            Font_Data_Length=M*((N+7)/8);
 496   3            break;  
 497   3          }
 498   2          case  ASC_12x6://1
 499   2          {
 500   3            M=12;N=6;
 501   3            Font_Width=N;
 502   3            BaseAdd=Ascii_Font_12x6;
*** WARNING C182 IN LINE 502 OF Chinese_Font_Lib.C: pointer to different objects
 503   3            Font_Start_Address =BaseAdd+ (ASCII_Code - ' ') * M ;
 504   3            Font_Data_Length=M*((N+7)/8);
 505   3            break;  
 506   3          }
 507   2          case  ASC_14x7://1
 508   2          {
 509   3            M=14;N=7;
 510   3            Font_Width=N;
 511   3            BaseAdd=Ascii_Font_14x7;
*** WARNING C182 IN LINE 511 OF Chinese_Font_Lib.C: pointer to different objects
 512   3            Font_Start_Address =BaseAdd+ (ASCII_Code - ' ') * M ;
 513   3            Font_Data_Length=M*((N+7)/8);
 514   3            break;  
 515   3          }
 516   2          case  ASC_16x8://1
 517   2          {
 518   3            M=16;N=8;
 519   3            Font_Width=N;
 520   3            BaseAdd=Ascii_Font_16x8;
*** WARNING C182 IN LINE 520 OF Chinese_Font_Lib.C: pointer to different objects
 521   3            Font_Start_Address =BaseAdd+ (ASCII_Code - ' ') * M ;
 522   3            Font_Data_Length=M*((N+7)/8);
 523   3            break;  
 524   3          }
 525   2      
 526   2          default:
 527   2            break;
 528   2        }
 529   1        
 530   1        //读字库操作
 531   1      
 532   1        //读指定长度的点阵数据送*Data_Pointer(Data_Pointer指向的数组)
 533   1        while (Font_Data_Length!=0)
 534   1        {
 535   2          
 536   2          *Data_Pointer=*Font_Start_Address;
 537   2          Font_Start_Address++;
 538   2              Data_Pointer++;
 539   2      
 540   2          Font_Data_Length--;
 541   2        }
 542   1        
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 10  

 543   1        return Font_Width;
 544   1      }
 545          
 546          
 547          
 548          
 549          
 550          unsigned char code Ascii_Font_7x5[96][7]={
 551          0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x20  ' '
 552          0x20,0x20,0x20,0x20,0x20,0x00,0x20,    //Ascii Code=0x21  '!'
 553          0x50,0x50,0x50,0x00,0x00,0x00,0x00,    //Ascii Code=0x22  '"'
 554          0x50,0x50,0xF8,0x50,0xF8,0x50,0x50,    //Ascii Code=0x23  '#'
 555          0x20,0x78,0xA0,0x70,0x28,0xF0,0x20,    //Ascii Code=0x24  '$'
 556          0xC0,0xC8,0x10,0x20,0x40,0x98,0x18,    //Ascii Code=0x25  '%'
 557          0x60,0x90,0xA0,0x40,0xA8,0x90,0x68,    //Ascii Code=0x26  '&'
 558          0x60,0x20,0x40,0x00,0x00,0x00,0x00,    //Ascii Code=0x27  '''
 559          0x10,0x20,0x40,0x40,0x40,0x20,0x10,    //Ascii Code=0x28  '('
 560          0x40,0x20,0x10,0x10,0x10,0x20,0x40,    //Ascii Code=0x29  ')'
 561          0x00,0x20,0xA8,0x70,0xA8,0x20,0x00,    //Ascii Code=0x2A  '*'
 562          0x00,0x20,0x20,0xF8,0x20,0x20,0x00,    //Ascii Code=0x2B  '+'
 563          0x00,0x00,0x00,0x00,0x60,0x20,0x40,    //Ascii Code=0x2C  ','
 564          0x00,0x00,0x00,0xF8,0x00,0x00,0x00,    //Ascii Code=0x2D  '-'
 565          0x00,0x00,0x00,0x00,0x00,0x60,0x60,    //Ascii Code=0x2E  '.'
 566          0x00,0x08,0x10,0x20,0x40,0x80,0x00,    //Ascii Code=0x2F  '/'
 567          0x70,0x88,0x98,0xA8,0xC8,0x88,0x70,    //Ascii Code=0x30  '0'
 568          0x20,0x60,0x20,0x20,0x20,0x20,0x70,    //Ascii Code=0x31  '1'
 569          0x70,0x88,0x08,0x10,0x20,0x40,0xF8,    //Ascii Code=0x32  '2'
 570          0xF8,0x10,0x20,0x10,0x08,0x88,0x70,    //Ascii Code=0x33  '3'
 571          0x10,0x30,0x50,0x90,0xF8,0x10,0x10,    //Ascii Code=0x34  '4'
 572          0xF8,0x80,0xF0,0x08,0x08,0x88,0x70,    //Ascii Code=0x35  '5'
 573          0x30,0x40,0x80,0xF0,0x88,0x88,0x70,    //Ascii Code=0x36  '6'
 574          0xF8,0x08,0x10,0x20,0x40,0x40,0x40,    //Ascii Code=0x37  '7'
 575          0x70,0x88,0x88,0x70,0x88,0x88,0x70,    //Ascii Code=0x38  '8'
 576          0x70,0x88,0x88,0x78,0x08,0x08,0x30,    //Ascii Code=0x39  '9'
 577          0x00,0x60,0x60,0x00,0x60,0x60,0x00,    //Ascii Code=0x3A  ':'
 578          0x00,0x60,0x60,0x00,0x60,0x20,0x40,    //Ascii Code=0x3B  ';'
 579          0x10,0x20,0x40,0x80,0x40,0x20,0x10,    //Ascii Code=0x3C  '<'
 580          0x00,0x00,0xF8,0x00,0xF8,0x00,0x00,    //Ascii Code=0x3D  '='
 581          0x40,0x20,0x10,0x08,0x10,0x20,0x40,    //Ascii Code=0x3E  '>'
 582          0x70,0x88,0x08,0x10,0x20,0x00,0x20,    //Ascii Code=0x3F  '?'
 583          0x70,0x88,0x08,0x68,0xA8,0xA8,0x70,    //Ascii Code=0x40  '@'
 584          0x70,0x88,0x88,0x88,0xF8,0x88,0x88,    //Ascii Code=0x41  'A'
 585          0xF0,0x88,0x88,0xF0,0x88,0x88,0xF0,    //Ascii Code=0x42  'B'
 586          0x70,0x88,0x80,0x80,0x80,0x88,0x70,    //Ascii Code=0x43  'C'
 587          0xE0,0x90,0x88,0x88,0x88,0x90,0xE0,    //Ascii Code=0x44  'D'
 588          0xF8,0x80,0x80,0xF0,0x80,0x80,0xF8,    //Ascii Code=0x45  'E'
 589          0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,    //Ascii Code=0x46  'F'
 590          0x70,0x88,0x80,0xB8,0x88,0x88,0x70,    //Ascii Code=0x47  'G'
 591          0x88,0x88,0x88,0xF8,0x88,0x88,0x88,    //Ascii Code=0x48  'H'
 592          0x70,0x20,0x20,0x20,0x20,0x20,0x70,    //Ascii Code=0x49  'I'
 593          0x38,0x10,0x10,0x10,0x10,0x90,0x60,    //Ascii Code=0x4A  'J'
 594          0x88,0x90,0xA0,0xC0,0xA0,0x90,0x88,    //Ascii Code=0x4B  'K'
 595          0x80,0x80,0x80,0x80,0x80,0x80,0xF8,    //Ascii Code=0x4C  'L'
 596          0x88,0xD8,0xA8,0xA8,0x88,0x88,0x88,    //Ascii Code=0x4D  'M'
 597          0x88,0x88,0xC8,0xA8,0x98,0x88,0x88,    //Ascii Code=0x4E  'N'
 598          0x70,0x88,0x88,0x88,0x88,0x88,0x70,    //Ascii Code=0x4F  'O'
 599          0xF0,0x88,0x88,0xF0,0x80,0x80,0x80,    //Ascii Code=0x50  'P'
 600          0x70,0x88,0x88,0x88,0xA8,0x90,0x68,    //Ascii Code=0x51  'Q'
 601          0xF0,0x88,0x88,0xF0,0xA0,0x90,0x88,    //Ascii Code=0x52  'R'
 602          0x78,0x80,0x80,0x70,0x08,0x08,0xF0,    //Ascii Code=0x53  'S'
 603          0xF8,0x20,0x20,0x20,0x20,0x20,0x20,    //Ascii Code=0x54  'T'
 604          0x88,0x88,0x88,0x88,0x88,0x88,0x70,    //Ascii Code=0x55  'U'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 11  

 605          0x88,0x88,0x88,0x88,0x88,0x50,0x20,    //Ascii Code=0x56  'V'
 606          0x88,0x88,0x88,0x88,0xA8,0xA8,0x50,    //Ascii Code=0x57  'W'
 607          0x88,0x88,0x50,0x20,0x50,0x88,0x88,    //Ascii Code=0x58  'X'
 608          0x88,0x88,0x88,0x50,0x20,0x20,0x20,    //Ascii Code=0x59  'Y'
 609          0xF8,0x08,0x10,0x20,0x40,0x80,0xF8,    //Ascii Code=0x5A  'Z'
 610          0x70,0x40,0x40,0x40,0x40,0x40,0x70,    //Ascii Code=0x5B  '['
 611          0x00,0x80,0x40,0x20,0x10,0x08,0x00,    //Ascii Code=0x5C  '\'
 612          0x70,0x10,0x10,0x10,0x10,0x10,0x70,    //Ascii Code=0x5D  ']'
 613          0x20,0x50,0x88,0x00,0x00,0x00,0x00,    //Ascii Code=0x5E  '^'
 614          0x00,0x00,0x00,0x00,0x00,0x00,0xF8,    //Ascii Code=0x5F  '_'
 615          0x40,0x20,0x10,0x00,0x00,0x00,0x00,    //Ascii Code=0x60  '`'
 616          0x00,0x00,0x70,0x08,0x78,0x88,0x78,    //Ascii Code=0x61  'a'
 617          0x80,0x80,0x80,0xB0,0xC8,0x88,0xF0,    //Ascii Code=0x62  'b'
 618          0x00,0x00,0x70,0x80,0x80,0x88,0x70,    //Ascii Code=0x63  'c'
 619          0x08,0x08,0x08,0x68,0x98,0x88,0x78,    //Ascii Code=0x64  'd'
 620          0x00,0x00,0x70,0x88,0xF8,0x80,0x70,    //Ascii Code=0x65  'e'
 621          0x30,0x48,0x40,0xE0,0x40,0x40,0x40,    //Ascii Code=0x66  'f'
 622          0x00,0x78,0x88,0x88,0x78,0x08,0x70,    //Ascii Code=0x67  'g'
 623          0x80,0x80,0xB0,0xC8,0x88,0x88,0x88,    //Ascii Code=0x68  'h'
 624          0x00,0x20,0x00,0x20,0x20,0x20,0x20,    //Ascii Code=0x69  'i'
 625          0x10,0x00,0x30,0x10,0x10,0x90,0x60,    //Ascii Code=0x6A  'j'
 626          0x80,0x80,0x90,0xA0,0xC0,0xA0,0x90,    //Ascii Code=0x6B  'k'
 627          0x60,0x20,0x20,0x20,0x20,0x20,0x70,    //Ascii Code=0x6C  'l'
 628          0x00,0x00,0xD0,0xA8,0xA8,0x88,0x88,    //Ascii Code=0x6D  'm'
 629          0x00,0x00,0xB0,0xC8,0x88,0x88,0x88,    //Ascii Code=0x6E  'n'
 630          0x00,0x00,0x70,0x88,0x88,0x88,0x70,    //Ascii Code=0x6F  'o'
 631          0x00,0x00,0xF0,0x88,0xF0,0x80,0x60,    //Ascii Code=0x70  'p'
 632          0x00,0x00,0x68,0x98,0x78,0x08,0x08,    //Ascii Code=0x71  'q'
 633          0x00,0x00,0xB0,0xC8,0x80,0x80,0x80,    //Ascii Code=0x72  'r'
 634          0x00,0x00,0x70,0x80,0x70,0x08,0xF0,    //Ascii Code=0x73  's'
 635          0x20,0x20,0xF8,0x20,0x20,0x28,0x10,    //Ascii Code=0x74  't'
 636          0x00,0x00,0x88,0x88,0x88,0x98,0x68,    //Ascii Code=0x75  'u'
 637          0x00,0x00,0x88,0x88,0x88,0x50,0x20,    //Ascii Code=0x76  'v'
 638          0x00,0x00,0xA8,0xA8,0xA8,0xA8,0x50,    //Ascii Code=0x77  'w'
 639          0x00,0x00,0x88,0x50,0x20,0x50,0x88,    //Ascii Code=0x78  'x'
 640          0x00,0x00,0x88,0x88,0x78,0x08,0x70,    //Ascii Code=0x79  'y'
 641          0x00,0x00,0xF8,0x10,0x20,0x40,0xF8,    //Ascii Code=0x7A  'z'
 642          0x10,0x20,0x20,0x40,0x20,0x20,0x10,    //Ascii Code=0x7B  '{'
 643          0x20,0x20,0x20,0x20,0x20,0x20,0x20,    //Ascii Code=0x7C  '|'
 644          0x40,0x20,0x20,0x10,0x20,0x20,0x40,    //Ascii Code=0x7D  '}'
 645          0x40,0xA8,0xA8,0x10,0x00,0x00,0x00,    //Ascii Code=0x7E  '~'
 646          0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,    //Ascii Code=0x7F  ''
 647          };
 648          
 649          
 650          
 651          unsigned char code Ascii_Font_8x6[96][8]={
 652          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x20  ' '
 653          0x20,0x20,0x20,0x20,0x20,0x00,0x20,0x00,    //Ascii Code=0x21  '!'
 654          0x50,0x50,0x50,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x22  '"'
 655          0x50,0x50,0xF8,0x50,0xF8,0x50,0x50,0x00,    //Ascii Code=0x23  '#'
 656          0x20,0x78,0xA0,0x70,0x28,0xF0,0x20,0x00,    //Ascii Code=0x24  '$'
 657          0xC0,0xC8,0x10,0x20,0x40,0x98,0x18,0x00,    //Ascii Code=0x25  '%'
 658          0x60,0x90,0xA0,0x40,0xA8,0x90,0x68,0x00,    //Ascii Code=0x26  '&'
 659          0x60,0x20,0x40,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x27  '''
 660          0x10,0x20,0x40,0x40,0x40,0x20,0x10,0x00,    //Ascii Code=0x28  '('
 661          0x40,0x20,0x10,0x10,0x10,0x20,0x40,0x00,    //Ascii Code=0x29  ')'
 662          0x00,0x20,0xA8,0x70,0xA8,0x20,0x00,0x00,    //Ascii Code=0x2A  '*'
 663          0x00,0x20,0x20,0xF8,0x20,0x20,0x00,0x00,    //Ascii Code=0x2B  '+'
 664          0x00,0x00,0x00,0x00,0x60,0x20,0x40,0x00,    //Ascii Code=0x2C  ','
 665          0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,    //Ascii Code=0x2D  '-'
 666          0x00,0x00,0x00,0x00,0x00,0x60,0x60,0x00,    //Ascii Code=0x2E  '.'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 12  

 667          0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,    //Ascii Code=0x2F  '/'
 668          0x70,0x88,0x98,0xA8,0xC8,0x88,0x70,0x00,    //Ascii Code=0x30  '0'
 669          0x20,0x60,0x20,0x20,0x20,0x20,0x70,0x00,    //Ascii Code=0x31  '1'
 670          0x70,0x88,0x08,0x10,0x20,0x40,0xF8,0x00,    //Ascii Code=0x32  '2'
 671          0xF8,0x10,0x20,0x10,0x08,0x88,0x70,0x00,    //Ascii Code=0x33  '3'
 672          0x10,0x30,0x50,0x90,0xF8,0x10,0x10,0x00,    //Ascii Code=0x34  '4'
 673          0xF8,0x80,0xF0,0x08,0x08,0x88,0x70,0x00,    //Ascii Code=0x35  '5'
 674          0x30,0x40,0x80,0xF0,0x88,0x88,0x70,0x00,    //Ascii Code=0x36  '6'
 675          0xF8,0x08,0x10,0x20,0x40,0x40,0x40,0x00,    //Ascii Code=0x37  '7'
 676          0x70,0x88,0x88,0x70,0x88,0x88,0x70,0x00,    //Ascii Code=0x38  '8'
 677          0x70,0x88,0x88,0x78,0x08,0x08,0x30,0x00,    //Ascii Code=0x39  '9'
 678          0x00,0x60,0x60,0x00,0x60,0x60,0x00,0x00,    //Ascii Code=0x3A  ':'
 679          0x00,0x60,0x60,0x00,0x60,0x20,0x40,0x00,    //Ascii Code=0x3B  ';'
 680          0x10,0x20,0x40,0x80,0x40,0x20,0x10,0x00,    //Ascii Code=0x3C  '<'
 681          0x00,0x00,0xF8,0x00,0xF8,0x00,0x00,0x00,    //Ascii Code=0x3D  '='
 682          0x40,0x20,0x10,0x08,0x10,0x20,0x40,0x00,    //Ascii Code=0x3E  '>'
 683          0x70,0x88,0x08,0x10,0x20,0x00,0x20,0x00,    //Ascii Code=0x3F  '?'
 684          0x70,0x88,0x08,0x68,0xA8,0xA8,0x70,0x00,    //Ascii Code=0x40  '@'
 685          0x70,0x88,0x88,0x88,0xF8,0x88,0x88,0x00,    //Ascii Code=0x41  'A'
 686          0xF0,0x88,0x88,0xF0,0x88,0x88,0xF0,0x00,    //Ascii Code=0x42  'B'
 687          0x70,0x88,0x80,0x80,0x80,0x88,0x70,0x00,    //Ascii Code=0x43  'C'
 688          0xE0,0x90,0x88,0x88,0x88,0x90,0xE0,0x00,    //Ascii Code=0x44  'D'
 689          0xF8,0x80,0x80,0xF0,0x80,0x80,0xF8,0x00,    //Ascii Code=0x45  'E'
 690          0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0x00,    //Ascii Code=0x46  'F'
 691          0x70,0x88,0x80,0xB8,0x88,0x88,0x70,0x00,    //Ascii Code=0x47  'G'
 692          0x88,0x88,0x88,0xF8,0x88,0x88,0x88,0x00,    //Ascii Code=0x48  'H'
 693          0x70,0x20,0x20,0x20,0x20,0x20,0x70,0x00,    //Ascii Code=0x49  'I'
 694          0x38,0x10,0x10,0x10,0x10,0x90,0x60,0x00,    //Ascii Code=0x4A  'J'
 695          0x88,0x90,0xA0,0xC0,0xA0,0x90,0x88,0x00,    //Ascii Code=0x4B  'K'
 696          0x80,0x80,0x80,0x80,0x80,0x80,0xF8,0x00,    //Ascii Code=0x4C  'L'
 697          0x88,0xD8,0xA8,0xA8,0x88,0x88,0x88,0x00,    //Ascii Code=0x4D  'M'
 698          0x88,0x88,0xC8,0xA8,0x98,0x88,0x88,0x00,    //Ascii Code=0x4E  'N'
 699          0x70,0x88,0x88,0x88,0x88,0x88,0x70,0x00,    //Ascii Code=0x4F  'O'
 700          0xF0,0x88,0x88,0xF0,0x80,0x80,0x80,0x00,    //Ascii Code=0x50  'P'
 701          0x70,0x88,0x88,0x88,0xA8,0x90,0x68,0x00,    //Ascii Code=0x51  'Q'
 702          0xF0,0x88,0x88,0xF0,0xA0,0x90,0x88,0x00,    //Ascii Code=0x52  'R'
 703          0x78,0x80,0x80,0x70,0x08,0x08,0xF0,0x00,    //Ascii Code=0x53  'S'
 704          0xF8,0x20,0x20,0x20,0x20,0x20,0x20,0x00,    //Ascii Code=0x54  'T'
 705          0x88,0x88,0x88,0x88,0x88,0x88,0x70,0x00,    //Ascii Code=0x55  'U'
 706          0x88,0x88,0x88,0x88,0x88,0x50,0x20,0x00,    //Ascii Code=0x56  'V'
 707          0x88,0x88,0x88,0x88,0xA8,0xA8,0x50,0x00,    //Ascii Code=0x57  'W'
 708          0x88,0x88,0x50,0x20,0x50,0x88,0x88,0x00,    //Ascii Code=0x58  'X'
 709          0x88,0x88,0x88,0x50,0x20,0x20,0x20,0x00,    //Ascii Code=0x59  'Y'
 710          0xF8,0x08,0x10,0x20,0x40,0x80,0xF8,0x00,    //Ascii Code=0x5A  'Z'
 711          0x70,0x40,0x40,0x40,0x40,0x40,0x70,0x00,    //Ascii Code=0x5B  '['
 712          0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,    //Ascii Code=0x5C  '\'
 713          0x70,0x10,0x10,0x10,0x10,0x10,0x70,0x00,    //Ascii Code=0x5D  ']'
 714          0x20,0x50,0x88,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x5E  '^'
 715          0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,    //Ascii Code=0x5F  '_'
 716          0x40,0x20,0x10,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x60  '`'
 717          0x00,0x00,0x70,0x08,0x78,0x88,0x78,0x00,    //Ascii Code=0x61  'a'
 718          0x80,0x80,0x80,0xB0,0xC8,0x88,0xF0,0x00,    //Ascii Code=0x62  'b'
 719          0x00,0x00,0x70,0x80,0x80,0x88,0x70,0x00,    //Ascii Code=0x63  'c'
 720          0x08,0x08,0x08,0x68,0x98,0x88,0x78,0x00,    //Ascii Code=0x64  'd'
 721          0x00,0x00,0x70,0x88,0xF8,0x80,0x70,0x00,    //Ascii Code=0x65  'e'
 722          0x30,0x48,0x40,0xE0,0x40,0x40,0x40,0x00,    //Ascii Code=0x66  'f'
 723          0x00,0x78,0x88,0x88,0x78,0x08,0x70,0x00,    //Ascii Code=0x67  'g'
 724          0x80,0x80,0xB0,0xC8,0x88,0x88,0x88,0x00,    //Ascii Code=0x68  'h'
 725          0x00,0x20,0x00,0x20,0x20,0x20,0x20,0x00,    //Ascii Code=0x69  'i'
 726          0x10,0x00,0x30,0x10,0x10,0x90,0x60,0x00,    //Ascii Code=0x6A  'j'
 727          0x80,0x80,0x90,0xA0,0xC0,0xA0,0x90,0x00,    //Ascii Code=0x6B  'k'
 728          0x60,0x20,0x20,0x20,0x20,0x20,0x70,0x00,    //Ascii Code=0x6C  'l'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 13  

 729          0x00,0x00,0xD0,0xA8,0xA8,0x88,0x88,0x00,    //Ascii Code=0x6D  'm'
 730          0x00,0x00,0xB0,0xC8,0x88,0x88,0x88,0x00,    //Ascii Code=0x6E  'n'
 731          0x00,0x00,0x70,0x88,0x88,0x88,0x70,0x00,    //Ascii Code=0x6F  'o'
 732          0x00,0x00,0xF0,0x88,0xF0,0x80,0x60,0x00,    //Ascii Code=0x70  'p'
 733          0x00,0x00,0x68,0x98,0x78,0x08,0x08,0x00,    //Ascii Code=0x71  'q'
 734          0x00,0x00,0xB0,0xC8,0x80,0x80,0x80,0x00,    //Ascii Code=0x72  'r'
 735          0x00,0x00,0x70,0x80,0x70,0x08,0xF0,0x00,    //Ascii Code=0x73  's'
 736          0x20,0x20,0xF8,0x20,0x20,0x28,0x10,0x00,    //Ascii Code=0x74  't'
 737          0x00,0x00,0x88,0x88,0x88,0x98,0x68,0x00,    //Ascii Code=0x75  'u'
 738          0x00,0x00,0x88,0x88,0x88,0x50,0x20,0x00,    //Ascii Code=0x76  'v'
 739          0x00,0x00,0xA8,0xA8,0xA8,0xA8,0x50,0x00,    //Ascii Code=0x77  'w'
 740          0x00,0x00,0x88,0x50,0x20,0x50,0x88,0x00,    //Ascii Code=0x78  'x'
 741          0x00,0x00,0x88,0x88,0x78,0x08,0x70,0x00,    //Ascii Code=0x79  'y'
 742          0x00,0x00,0xF8,0x10,0x20,0x40,0xF8,0x00,    //Ascii Code=0x7A  'z'
 743          0x10,0x20,0x20,0x40,0x20,0x20,0x10,0x00,    //Ascii Code=0x7B  '{'
 744          0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,    //Ascii Code=0x7C  '|'
 745          0x40,0x20,0x20,0x10,0x20,0x20,0x40,0x00,    //Ascii Code=0x7D  '}'
 746          0x40,0xA8,0xA8,0x10,0x00,0x00,0x00,0x00,    //Ascii Code=0x7E  '~'
 747          0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0x00,    //Ascii Code=0x7F  ''
 748          };
 749          
 750          
 751          unsigned char code Ascii_Font_12x6[96][12]={
 752          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x20  ' '
 753          0x00,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x10,0x00,0x00,0x00,    //Ascii Code=0x21  '!'
 754          0x00,0x6C,0x48,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x22  '"'
 755          0x00,0x14,0x14,0x28,0x7C,0x28,0x7C,0x28,0x50,0x50,0x00,0x00,    //Ascii Code=0x23  '#'
 756          0x00,0x10,0x38,0x40,0x40,0x38,0x48,0x70,0x10,0x10,0x00,0x00,    //Ascii Code=0x24  '$'
 757          0x00,0x20,0x50,0x20,0x0C,0x70,0x08,0x14,0x08,0x00,0x00,0x00,    //Ascii Code=0x25  '%'
 758          0x00,0x00,0x00,0x18,0x20,0x20,0x54,0x48,0x34,0x00,0x00,0x00,    //Ascii Code=0x26  '&'
 759          0x00,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x27  '''
 760          0x00,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x08,0x08,0x00,    //Ascii Code=0x28  '('
 761          0x00,0x20,0x20,0x10,0x10,0x10,0x10,0x10,0x10,0x20,0x20,0x00,    //Ascii Code=0x29  ')'
 762          0x00,0x10,0x7C,0x10,0x28,0x28,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2A  '*'
 763          0x00,0x00,0x10,0x10,0x10,0xFC,0x10,0x10,0x10,0x00,0x00,0x00,    //Ascii Code=0x2B  '+'
 764          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x10,0x30,0x20,0x00,    //Ascii Code=0x2C  ','
 765          0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2D  '-'
 766          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,    //Ascii Code=0x2E  '.'
 767          0x00,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x00,0x00,    //Ascii Code=0x2F  '/'
 768          0x00,0x38,0x44,0x44,0x44,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x30  '0'
 769          0x00,0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,    //Ascii Code=0x31  '1'
 770          0x00,0x38,0x44,0x04,0x08,0x10,0x20,0x44,0x7C,0x00,0x00,0x00,    //Ascii Code=0x32  '2'
 771          0x00,0x38,0x44,0x04,0x18,0x04,0x04,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x33  '3'
 772          0x00,0x0C,0x14,0x14,0x24,0x44,0x7C,0x04,0x0C,0x00,0x00,0x00,    //Ascii Code=0x34  '4'
 773          0x00,0x3C,0x20,0x20,0x38,0x04,0x04,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x35  '5'
 774          0x00,0x1C,0x20,0x40,0x78,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x36  '6'
 775          0x00,0x7C,0x44,0x04,0x08,0x08,0x08,0x10,0x10,0x00,0x00,0x00,    //Ascii Code=0x37  '7'
 776          0x00,0x38,0x44,0x44,0x38,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x38  '8'
 777          0x00,0x38,0x44,0x44,0x44,0x3C,0x04,0x08,0x70,0x00,0x00,0x00,    //Ascii Code=0x39  '9'
 778          0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x00,0x00,0x00,    //Ascii Code=0x3A  ':'
 779          0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x18,0x30,0x20,0x00,0x00,    //Ascii Code=0x3B  ';'
 780          0x00,0x00,0x0C,0x10,0x60,0x80,0x60,0x10,0x0C,0x00,0x00,0x00,    //Ascii Code=0x3C  '<'
 781          0x00,0x00,0x00,0x00,0x7C,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x3D  '='
 782          0x00,0x00,0xC0,0x20,0x18,0x04,0x18,0x20,0xC0,0x00,0x00,0x00,    //Ascii Code=0x3E  '>'
 783          0x00,0x00,0x18,0x24,0x04,0x08,0x10,0x00,0x30,0x00,0x00,0x00,    //Ascii Code=0x3F  '?'
 784          0x38,0x44,0x44,0x4C,0x54,0x54,0x4C,0x40,0x44,0x38,0x00,0x00,    //Ascii Code=0x40  '@'
 785          0x00,0x30,0x10,0x28,0x28,0x28,0x7C,0x44,0xEC,0x00,0x00,0x00,    //Ascii Code=0x41  'A'
 786          0x00,0xF8,0x44,0x44,0x78,0x44,0x44,0x44,0xF8,0x00,0x00,0x00,    //Ascii Code=0x42  'B'
 787          0x00,0x3C,0x44,0x40,0x40,0x40,0x40,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x43  'C'
 788          0x00,0xF0,0x48,0x44,0x44,0x44,0x44,0x48,0xF0,0x00,0x00,0x00,    //Ascii Code=0x44  'D'
 789          0x00,0xFC,0x44,0x50,0x70,0x50,0x40,0x44,0xFC,0x00,0x00,0x00,    //Ascii Code=0x45  'E'
 790          0x00,0x7C,0x20,0x28,0x38,0x28,0x20,0x20,0x70,0x00,0x00,0x00,    //Ascii Code=0x46  'F'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 14  

 791          0x00,0x3C,0x44,0x40,0x40,0x4C,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x47  'G'
 792          0x00,0xEC,0x44,0x44,0x7C,0x44,0x44,0x44,0xEC,0x00,0x00,0x00,    //Ascii Code=0x48  'H'
 793          0x00,0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,    //Ascii Code=0x49  'I'
 794          0x00,0x3C,0x08,0x08,0x08,0x48,0x48,0x48,0x30,0x00,0x00,0x00,    //Ascii Code=0x4A  'J'
 795          0x00,0xEC,0x44,0x48,0x50,0x70,0x48,0x44,0xE4,0x00,0x00,0x00,    //Ascii Code=0x4B  'K'
 796          0x00,0x70,0x20,0x20,0x20,0x20,0x24,0x24,0x7C,0x00,0x00,0x00,    //Ascii Code=0x4C  'L'
 797          0x00,0xEC,0x6C,0x6C,0x54,0x54,0x44,0x44,0xEC,0x00,0x00,0x00,    //Ascii Code=0x4D  'M'
 798          0x00,0xEC,0x64,0x64,0x54,0x54,0x54,0x4C,0xEC,0x00,0x00,0x00,    //Ascii Code=0x4E  'N'
 799          0x00,0x38,0x44,0x44,0x44,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x4F  'O'
 800          0x00,0x78,0x24,0x24,0x24,0x38,0x20,0x20,0x70,0x00,0x00,0x00,    //Ascii Code=0x50  'P'
 801          0x00,0x38,0x44,0x44,0x44,0x44,0x44,0x44,0x38,0x1C,0x00,0x00,    //Ascii Code=0x51  'Q'
 802          0x00,0xF8,0x44,0x44,0x44,0x78,0x48,0x44,0xE0,0x00,0x00,0x00,    //Ascii Code=0x52  'R'
 803          0x00,0x34,0x4C,0x40,0x38,0x04,0x04,0x64,0x58,0x00,0x00,0x00,    //Ascii Code=0x53  'S'
 804          0x00,0xFC,0x90,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,    //Ascii Code=0x54  'T'
 805          0x00,0xEC,0x44,0x44,0x44,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x55  'U'
 806          0x00,0xEC,0x44,0x44,0x28,0x28,0x28,0x10,0x10,0x00,0x00,0x00,    //Ascii Code=0x56  'V'
 807          0x00,0xEC,0x44,0x44,0x54,0x54,0x54,0x54,0x28,0x00,0x00,0x00,    //Ascii Code=0x57  'W'
 808          0x00,0xC4,0x44,0x28,0x10,0x10,0x28,0x44,0xC4,0x00,0x00,0x00,    //Ascii Code=0x58  'X'
 809          0x00,0xEC,0x44,0x28,0x28,0x10,0x10,0x10,0x38,0x00,0x00,0x00,    //Ascii Code=0x59  'Y'
 810          0x00,0x7C,0x44,0x08,0x10,0x10,0x20,0x44,0x7C,0x00,0x00,0x00,    //Ascii Code=0x5A  'Z'
 811          0x00,0x38,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x38,0x00,    //Ascii Code=0x5B  '['
 812          0x00,0x40,0x20,0x20,0x20,0x10,0x10,0x08,0x08,0x08,0x00,0x00,    //Ascii Code=0x5C  '\'
 813          0x00,0x38,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x38,0x00,    //Ascii Code=0x5D  ']'
 814          0x00,0x10,0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x5E  '^'
 815          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,    //Ascii Code=0x5F  '_'
 816          0x00,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x60  '`'
 817          0x00,0x00,0x00,0x38,0x44,0x3C,0x44,0x44,0x3C,0x00,0x00,0x00,    //Ascii Code=0x61  'a'
 818          0x00,0xC0,0x40,0x58,0x64,0x44,0x44,0x44,0xF8,0x00,0x00,0x00,    //Ascii Code=0x62  'b'
 819          0x00,0x00,0x00,0x3C,0x44,0x40,0x40,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x63  'c'
 820          0x00,0x0C,0x04,0x34,0x4C,0x44,0x44,0x44,0x3C,0x00,0x00,0x00,    //Ascii Code=0x64  'd'
 821          0x00,0x00,0x00,0x38,0x44,0x7C,0x40,0x40,0x3C,0x00,0x00,0x00,    //Ascii Code=0x65  'e'
 822          0x00,0x1C,0x20,0x7C,0x20,0x20,0x20,0x20,0x7C,0x00,0x00,0x00,    //Ascii Code=0x66  'f'
 823          0x00,0x00,0x00,0x34,0x4C,0x44,0x44,0x44,0x3C,0x04,0x38,0x00,    //Ascii Code=0x67  'g'
 824          0x00,0xC0,0x40,0x58,0x64,0x44,0x44,0x44,0xEC,0x00,0x00,0x00,    //Ascii Code=0x68  'h'
 825          0x00,0x10,0x00,0x70,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,    //Ascii Code=0x69  'i'
 826          0x00,0x10,0x00,0x78,0x08,0x08,0x08,0x08,0x08,0x08,0x70,0x00,    //Ascii Code=0x6A  'j'
 827          0x00,0xC0,0x40,0x5C,0x48,0x70,0x50,0x48,0xDC,0x00,0x00,0x00,    //Ascii Code=0x6B  'k'
 828          0x00,0x30,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,    //Ascii Code=0x6C  'l'
 829          0x00,0x00,0x00,0xE8,0x54,0x54,0x54,0x54,0xFC,0x00,0x00,0x00,    //Ascii Code=0x6D  'm'
 830          0x00,0x00,0x00,0xD8,0x64,0x44,0x44,0x44,0xEC,0x00,0x00,0x00,    //Ascii Code=0x6E  'n'
 831          0x00,0x00,0x00,0x38,0x44,0x44,0x44,0x44,0x38,0x00,0x00,0x00,    //Ascii Code=0x6F  'o'
 832          0x00,0x00,0x00,0xD8,0x64,0x44,0x44,0x44,0x78,0x40,0xE0,0x00,    //Ascii Code=0x70  'p'
 833          0x00,0x00,0x00,0x34,0x4C,0x44,0x44,0x44,0x3C,0x04,0x0C,0x00,    //Ascii Code=0x71  'q'
 834          0x00,0x00,0x00,0x6C,0x30,0x20,0x20,0x20,0x7C,0x00,0x00,0x00,    //Ascii Code=0x72  'r'
 835          0x00,0x00,0x00,0x3C,0x44,0x38,0x04,0x44,0x78,0x00,0x00,0x00,    //Ascii Code=0x73  's'
 836          0x00,0x00,0x20,0x7C,0x20,0x20,0x20,0x20,0x1C,0x00,0x00,0x00,    //Ascii Code=0x74  't'
 837          0x00,0x00,0x00,0xCC,0x44,0x44,0x44,0x4C,0x34,0x00,0x00,0x00,    //Ascii Code=0x75  'u'
 838          0x00,0x00,0x00,0xEC,0x44,0x44,0x28,0x28,0x10,0x00,0x00,0x00,    //Ascii Code=0x76  'v'
 839          0x00,0x00,0x00,0xEC,0x44,0x54,0x54,0x54,0x28,0x00,0x00,0x00,    //Ascii Code=0x77  'w'
 840          0x00,0x00,0x00,0xCC,0x48,0x30,0x30,0x48,0xCC,0x00,0x00,0x00,    //Ascii Code=0x78  'x'
 841          0x00,0x00,0x00,0xEC,0x44,0x24,0x28,0x18,0x10,0x10,0x78,0x00,    //Ascii Code=0x79  'y'
 842          0x00,0x00,0x00,0x7C,0x48,0x10,0x20,0x44,0x7C,0x00,0x00,0x00,    //Ascii Code=0x7A  'z'
 843          0x00,0x08,0x10,0x10,0x10,0x10,0x20,0x10,0x10,0x10,0x08,0x00,    //Ascii Code=0x7B  '{'
 844          0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,    //Ascii Code=0x7C  '|'
 845          0x00,0x20,0x10,0x10,0x10,0x10,0x08,0x10,0x10,0x10,0x20,0x00,    //Ascii Code=0x7D  '}'
 846          0x00,0x00,0x00,0x00,0x00,0x24,0x58,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x7E  '~'
 847          0x00,0x00,0x00,0x00,0x00,0x24,0x58,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x7F  ''
 848          };
 849          
 850          
 851          unsigned char code Ascii_Font_14x7[96][14]={
 852          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x20  ' '
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 15  

 853          0x00,0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x10,0x10,0x00,0x00,    //Ascii Code=0x21  '!'
 854          0x00,0x6C,0x24,0x24,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x22  '"'
 855          0x00,0x00,0x0A,0x0A,0x0A,0x7E,0x14,0x14,0x7E,0x28,0x28,0x28,0x00,0x00,    //Ascii Code=0x23  '#'
 856          0x00,0x00,0x08,0x3C,0x4A,0x4A,0x28,0x1C,0x0A,0x4A,0x4A,0x3C,0x08,0x00,    //Ascii Code=0x24  '$'
 857          0x00,0x00,0x32,0x4A,0x4C,0x38,0x08,0x10,0x1C,0x32,0x52,0x4C,0x00,0x00,    //Ascii Code=0x25  '%'
 858          0x00,0x00,0x18,0x24,0x24,0x24,0x18,0x32,0x4A,0x44,0x4C,0x32,0x00,0x00,    //Ascii Code=0x26  '&'
 859          0x00,0x18,0x08,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x27  '''
 860          0x00,0x02,0x04,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x08,0x08,0x04,0x02,    //Ascii Code=0x28  '('
 861          0x00,0x40,0x20,0x10,0x10,0x08,0x08,0x08,0x08,0x08,0x10,0x10,0x20,0x40,    //Ascii Code=0x29  ')'
 862          0x00,0x00,0x08,0x2A,0x1C,0x08,0x1C,0x2A,0x08,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2A  '*'
 863          0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x7C,0x10,0x10,0x10,0x00,0x00,0x00,    //Ascii Code=0x2B  '+'
 864          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x10,0x10,0x20,    //Ascii Code=0x2C  ','
 865          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2D  '-'
 866          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x1C,0x08,0x00,    //Ascii Code=0x2E  '.'
 867          0x00,0x02,0x02,0x04,0x04,0x08,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,    //Ascii Code=0x2F  '/'
 868          0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00,    //Ascii Code=0x30  '0'
 869          0x00,0x00,0x08,0x18,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x1C,0x00,0x00,    //Ascii Code=0x31  '1'
 870          0x00,0x00,0x3C,0x42,0x42,0x02,0x04,0x04,0x08,0x10,0x20,0x7E,0x00,0x00,    //Ascii Code=0x32  '2'
 871          0x00,0x00,0x3C,0x42,0x42,0x02,0x1C,0x02,0x02,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x33  '3'
 872          0x00,0x00,0x04,0x0C,0x14,0x14,0x24,0x24,0x44,0x7E,0x04,0x04,0x00,0x00,    //Ascii Code=0x34  '4'
 873          0x00,0x00,0x7E,0x40,0x40,0x7C,0x42,0x02,0x02,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x35  '5'
 874          0x00,0x00,0x1C,0x22,0x42,0x40,0x5C,0x62,0x42,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x36  '6'
 875          0x00,0x00,0x7E,0x42,0x44,0x04,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,    //Ascii Code=0x37  '7'
 876          0x00,0x00,0x3C,0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x38  '8'
 877          0x00,0x00,0x3C,0x42,0x42,0x42,0x46,0x3A,0x02,0x42,0x44,0x38,0x00,0x00,    //Ascii Code=0x39  '9'
 878          0x00,0x00,0x00,0x00,0x08,0x1C,0x08,0x00,0x00,0x08,0x1C,0x08,0x00,0x00,    //Ascii Code=0x3A  ':'
 879          0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x18,0x08,0x08,0x10,0x00,    //Ascii Code=0x3B  ';'
 880          0x00,0x00,0x00,0x04,0x08,0x10,0x20,0x40,0x20,0x10,0x08,0x04,0x00,0x00,    //Ascii Code=0x3C  '<'
 881          0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x3D  '='
 882          0x00,0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x08,0x10,0x20,0x40,0x00,0x00,    //Ascii Code=0x3E  '>'
 883          0x00,0x00,0x3C,0x42,0x42,0x04,0x08,0x08,0x08,0x00,0x08,0x08,0x00,0x00,    //Ascii Code=0x3F  '?'
 884          0x00,0x00,0x1C,0x22,0x4E,0x52,0x52,0x52,0x52,0x4E,0x20,0x1E,0x00,0x00,    //Ascii Code=0x40  '@'
 885          0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x42,0x00,0x00,    //Ascii Code=0x41  'A'
 886          0x00,0x00,0x7C,0x22,0x22,0x22,0x3C,0x22,0x22,0x22,0x22,0x7C,0x00,0x00,    //Ascii Code=0x42  'B'
 887          0x00,0x00,0x3C,0x42,0x42,0x40,0x40,0x40,0x40,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x43  'C'
 888          0x00,0x00,0x7C,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x22,0x7C,0x00,0x00,    //Ascii Code=0x44  'D'
 889          0x00,0x00,0x7E,0x40,0x40,0x40,0x78,0x40,0x40,0x40,0x40,0x7E,0x00,0x00,    //Ascii Code=0x45  'E'
 890          0x00,0x00,0x7E,0x40,0x40,0x40,0x78,0x40,0x40,0x40,0x40,0x40,0x00,0x00,    //Ascii Code=0x46  'F'
 891          0x00,0x00,0x3C,0x42,0x42,0x40,0x40,0x4E,0x42,0x42,0x46,0x3A,0x00,0x00,    //Ascii Code=0x47  'G'
 892          0x00,0x00,0x42,0x42,0x42,0x42,0x7E,0x42,0x42,0x42,0x42,0x42,0x00,0x00,    //Ascii Code=0x48  'H'
 893          0x00,0x00,0x3E,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3E,0x00,0x00,    //Ascii Code=0x49  'I'
 894          0x00,0x00,0x0E,0x04,0x04,0x04,0x04,0x04,0x04,0x44,0x44,0x38,0x00,0x00,    //Ascii Code=0x4A  'J'
 895          0x00,0x00,0x42,0x44,0x48,0x50,0x60,0x50,0x48,0x44,0x42,0x42,0x00,0x00,    //Ascii Code=0x4B  'K'
 896          0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7E,0x00,0x00,    //Ascii Code=0x4C  'L'
 897          0x00,0x00,0x42,0x66,0x66,0x5A,0x5A,0x42,0x42,0x42,0x42,0x42,0x00,0x00,    //Ascii Code=0x4D  'M'
 898          0x00,0x00,0x42,0x42,0x62,0x62,0x52,0x4A,0x46,0x46,0x42,0x42,0x00,0x00,    //Ascii Code=0x4E  'N'
 899          0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x4F  'O'
 900          0x00,0x00,0x7C,0x42,0x42,0x42,0x42,0x7C,0x40,0x40,0x40,0x40,0x00,0x00,    //Ascii Code=0x50  'P'
 901          0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x72,0x4A,0x46,0x3C,0x04,0x02,    //Ascii Code=0x51  'Q'
 902          0x00,0x00,0x7C,0x42,0x42,0x42,0x42,0x7C,0x48,0x44,0x42,0x42,0x00,0x00,    //Ascii Code=0x52  'R'
 903          0x00,0x00,0x3C,0x42,0x42,0x40,0x30,0x0C,0x02,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x53  'S'
 904          0x00,0x00,0xFE,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,    //Ascii Code=0x54  'T'
 905          0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x55  'U'
 906          0x00,0x00,0x42,0x42,0x42,0x42,0x24,0x24,0x24,0x18,0x18,0x18,0x00,0x00,    //Ascii Code=0x56  'V'
 907          0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x5A,0x5A,0x66,0x66,0x42,0x00,0x00,    //Ascii Code=0x57  'W'
 908          0x00,0x00,0x42,0x42,0x24,0x24,0x18,0x18,0x24,0x24,0x42,0x42,0x00,0x00,    //Ascii Code=0x58  'X'
 909          0x00,0x00,0x44,0x44,0x44,0x28,0x28,0x10,0x10,0x10,0x10,0x10,0x00,0x00,    //Ascii Code=0x59  'Y'
 910          0x00,0x00,0x7E,0x02,0x04,0x08,0x08,0x10,0x20,0x20,0x40,0x7E,0x00,0x00,    //Ascii Code=0x5A  'Z'
 911          0x00,0x1E,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x1E,    //Ascii Code=0x5B  '['
 912          0x00,0x40,0x40,0x20,0x20,0x10,0x10,0x10,0x08,0x08,0x04,0x04,0x02,0x02,    //Ascii Code=0x5C  '\'
 913          0x00,0x78,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x78,    //Ascii Code=0x5D  ']'
 914          0x00,0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x5E  '^'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 16  

 915          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,    //Ascii Code=0x5F  '_'
 916          0x00,0x0C,0x08,0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x60  '`'
 917          0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x0E,0x32,0x42,0x46,0x3A,0x00,0x00,    //Ascii Code=0x61  'a'
 918          0x00,0x00,0x40,0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x62,0x5C,0x00,0x00,    //Ascii Code=0x62  'b'
 919          0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x40,0x40,0x40,0x42,0x3C,0x00,0x00,    //Ascii Code=0x63  'c'
 920          0x00,0x00,0x02,0x02,0x02,0x3A,0x46,0x42,0x42,0x42,0x46,0x3A,0x00,0x00,    //Ascii Code=0x64  'd'
 921          0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x42,0x7E,0x40,0x42,0x3C,0x00,0x00,    //Ascii Code=0x65  'e'
 922          0x00,0x00,0x0C,0x12,0x10,0x10,0x7C,0x10,0x10,0x10,0x10,0x10,0x00,0x00,    //Ascii Code=0x66  'f'
 923          0x00,0x00,0x00,0x00,0x00,0x3A,0x44,0x44,0x44,0x38,0x20,0x5C,0x42,0x3C,    //Ascii Code=0x67  'g'
 924          0x00,0x00,0x40,0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x42,0x42,0x00,0x00,    //Ascii Code=0x68  'h'
 925          0x00,0x00,0x08,0x08,0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x3E,0x00,0x00,    //Ascii Code=0x69  'i'
 926          0x00,0x00,0x04,0x04,0x00,0x0C,0x04,0x04,0x04,0x04,0x04,0x44,0x44,0x38,    //Ascii Code=0x6A  'j'
 927          0x00,0x00,0x40,0x40,0x40,0x44,0x48,0x50,0x70,0x48,0x44,0x42,0x00,0x00,    //Ascii Code=0x6B  'k'
 928          0x00,0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3E,0x00,0x00,    //Ascii Code=0x6C  'l'
 929          0x00,0x00,0x00,0x00,0x00,0x68,0x54,0x54,0x54,0x54,0x54,0x44,0x00,0x00,    //Ascii Code=0x6D  'm'
 930          0x00,0x00,0x00,0x00,0x00,0x5C,0x62,0x42,0x42,0x42,0x42,0x42,0x00,0x00,    //Ascii Code=0x6E  'n'
 931          0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x42,0x42,0x3C,0x00,0x00,    //Ascii Code=0x6F  'o'
 932          0x00,0x00,0x00,0x00,0x00,0x5C,0x62,0x42,0x42,0x42,0x62,0x5C,0x40,0x40,    //Ascii Code=0x70  'p'
 933          0x00,0x00,0x00,0x00,0x00,0x3A,0x46,0x42,0x42,0x42,0x46,0x3A,0x02,0x02,    //Ascii Code=0x71  'q'
 934          0x00,0x00,0x00,0x00,0x00,0x5C,0x62,0x42,0x40,0x40,0x40,0x40,0x00,0x00,    //Ascii Code=0x72  'r'
 935          0x00,0x00,0x00,0x00,0x00,0x3C,0x42,0x20,0x18,0x04,0x42,0x3C,0x00,0x00,    //Ascii Code=0x73  's'
 936          0x00,0x00,0x10,0x10,0x10,0x7C,0x10,0x10,0x10,0x10,0x12,0x0C,0x00,0x00,    //Ascii Code=0x74  't'
 937          0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x46,0x3A,0x00,0x00,    //Ascii Code=0x75  'u'
 938          0x00,0x00,0x00,0x00,0x00,0x44,0x44,0x44,0x28,0x28,0x10,0x10,0x00,0x00,    //Ascii Code=0x76  'v'
 939          0x00,0x00,0x00,0x00,0x00,0x44,0x44,0x54,0x54,0x54,0x54,0x28,0x00,0x00,    //Ascii Code=0x77  'w'
 940          0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x00,0x00,    //Ascii Code=0x78  'x'
 941          0x00,0x00,0x00,0x00,0x00,0x42,0x42,0x42,0x42,0x46,0x3A,0x02,0x42,0x3C,    //Ascii Code=0x79  'y'
 942          0x00,0x00,0x00,0x00,0x00,0x7E,0x04,0x08,0x10,0x10,0x20,0x7E,0x00,0x00,    //Ascii Code=0x7A  'z'
 943          0x00,0x06,0x08,0x08,0x08,0x08,0x08,0x10,0x08,0x08,0x08,0x08,0x08,0x06,    //Ascii Code=0x7B  '{'
 944          0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,    //Ascii Code=0x7C  '|'
 945          0x00,0x60,0x10,0x10,0x10,0x10,0x10,0x08,0x10,0x10,0x10,0x10,0x10,0x60,    //Ascii Code=0x7D  '}'
 946          0x00,0x20,0x52,0x4A,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x7E  '~'
 947          0x00,0x00,0x00,0x00,0x00,0x10,0x38,0x6C,0xC6,0xC6,0xFE,0x00,0x00,0x00,    //Ascii Code=0x7F  ''
 948          };
 949          
 950          unsigned char code Ascii_Font_16x8[96][16]={
 951          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x20  ' '
 952          0x00,0x00,0x18,0x3C,0x3C,0x3C,0x18,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,    //Ascii Code=0x21  '!'
 953          0x00,0x66,0x66,0x66,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x22  '"'
 954          0x00,0x00,0x00,0x6C,0x6C,0xFE,0x6C,0x6C,0x6C,0xFE,0x6C,0x6C,0x00,0x00,0x00,0x00,    //Ascii Code=0x23  '#'
 955          0x18,0x18,0x7C,0xC6,0xC2,0xC0,0x7C,0x06,0x06,0x86,0xC6,0x7C,0x18,0x18,0x00,0x00,    //Ascii Code=0x24  '$'
 956          0x00,0x00,0x00,0x00,0xC2,0xC6,0x0C,0x18,0x30,0x60,0xC6,0x86,0x00,0x00,0x00,0x00,    //Ascii Code=0x25  '%'
 957          0x00,0x00,0x38,0x6C,0x6C,0x38,0x76,0xDC,0xCC,0xCC,0xCC,0x76,0x00,0x00,0x00,0x00,    //Ascii Code=0x26  '&'
 958          0x00,0x30,0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x27  '''
 959          0x00,0x00,0x0C,0x18,0x30,0x30,0x30,0x30,0x30,0x30,0x18,0x0C,0x00,0x00,0x00,0x00,    //Ascii Code=0x28  '('
 960          0x00,0x00,0x30,0x18,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x18,0x30,0x00,0x00,0x00,0x00,    //Ascii Code=0x29  ')'
 961          0x00,0x00,0x00,0x00,0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2A  '*'
 962          0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2B  '+'
 963          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x30,0x00,0x00,0x00,    //Ascii Code=0x2C  ','
 964          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x2D  '-'
 965          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,    //Ascii Code=0x2E  '.'
 966          0x00,0x00,0x00,0x00,0x02,0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00,0x00,0x00,0x00,    //Ascii Code=0x2F  '/'
 967          0x00,0x00,0x38,0x6C,0xC6,0xC6,0xD6,0xD6,0xC6,0xC6,0x6C,0x38,0x00,0x00,0x00,0x00,    //Ascii Code=0x30  '0'
 968          0x00,0x00,0x18,0x38,0x78,0x18,0x18,0x18,0x18,0x18,0x18,0x7E,0x00,0x00,0x00,0x00,    //Ascii Code=0x31  '1'
 969          0x00,0x00,0x7C,0xC6,0x06,0x0C,0x18,0x30,0x60,0xC0,0xC6,0xFE,0x00,0x00,0x00,0x00,    //Ascii Code=0x32  '2'
 970          0x00,0x00,0x7C,0xC6,0x06,0x06,0x3C,0x06,0x06,0x06,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x33  '3'
 971          0x00,0x00,0x0C,0x1C,0x3C,0x6C,0xCC,0xFE,0x0C,0x0C,0x0C,0x1E,0x00,0x00,0x00,0x00,    //Ascii Code=0x34  '4'
 972          0x00,0x00,0xFE,0xC0,0xC0,0xC0,0xFC,0x06,0x06,0x06,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x35  '5'
 973          0x00,0x00,0x38,0x60,0xC0,0xC0,0xFC,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x36  '6'
 974          0x00,0x00,0xFE,0xC6,0x06,0x06,0x0C,0x18,0x30,0x30,0x30,0x30,0x00,0x00,0x00,0x00,    //Ascii Code=0x37  '7'
 975          0x00,0x00,0x7C,0xC6,0xC6,0xC6,0x7C,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x38  '8'
 976          0x00,0x00,0x7C,0xC6,0xC6,0xC6,0x7E,0x06,0x06,0x06,0x0C,0x78,0x00,0x00,0x00,0x00,    //Ascii Code=0x39  '9'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 17  

 977          0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x3A  ':'
 978          0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x18,0x18,0x30,0x00,0x00,0x00,0x00,    //Ascii Code=0x3B  ';'
 979          0x00,0x00,0x00,0x06,0x0C,0x18,0x30,0x60,0x30,0x18,0x0C,0x06,0x00,0x00,0x00,0x00,    //Ascii Code=0x3C  '<'
 980          0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x3D  '='
 981          0x00,0x00,0x00,0x60,0x30,0x18,0x0C,0x06,0x0C,0x18,0x30,0x60,0x00,0x00,0x00,0x00,    //Ascii Code=0x3E  '>'
 982          0x00,0x00,0x7C,0xC6,0xC6,0x0C,0x18,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,    //Ascii Code=0x3F  '?'
 983          0x00,0x00,0x00,0x7C,0xC6,0xC6,0xDE,0xDE,0xDE,0xDC,0xC0,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x40  '@'
 984          0x00,0x00,0x10,0x38,0x6C,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x41  'A'
 985          0x00,0x00,0xFC,0x66,0x66,0x66,0x7C,0x66,0x66,0x66,0x66,0xFC,0x00,0x00,0x00,0x00,    //Ascii Code=0x42  'B'
 986          0x00,0x00,0x3C,0x66,0xC2,0xC0,0xC0,0xC0,0xC0,0xC2,0x66,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x43  'C'
 987          0x00,0x00,0xF8,0x6C,0x66,0x66,0x66,0x66,0x66,0x66,0x6C,0xF8,0x00,0x00,0x00,0x00,    //Ascii Code=0x44  'D'
 988          0x00,0x00,0xFE,0x66,0x62,0x68,0x78,0x68,0x60,0x62,0x66,0xFE,0x00,0x00,0x00,0x00,    //Ascii Code=0x45  'E'
 989          0x00,0x00,0xFE,0x66,0x62,0x68,0x78,0x68,0x60,0x60,0x60,0xF0,0x00,0x00,0x00,0x00,    //Ascii Code=0x46  'F'
 990          0x00,0x00,0x3C,0x66,0xC2,0xC0,0xC0,0xDE,0xC6,0xC6,0x66,0x3A,0x00,0x00,0x00,0x00,    //Ascii Code=0x47  'G'
 991          0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xFE,0xC6,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x48  'H'
 992          0x00,0x00,0x3C,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x49  'I'
 993          0x00,0x00,0x1E,0x0C,0x0C,0x0C,0x0C,0x0C,0xCC,0xCC,0xCC,0x78,0x00,0x00,0x00,0x00,    //Ascii Code=0x4A  'J'
 994          0x00,0x00,0xE6,0x66,0x66,0x6C,0x78,0x78,0x6C,0x66,0x66,0xE6,0x00,0x00,0x00,0x00,    //Ascii Code=0x4B  'K'
 995          0x00,0x00,0xF0,0x60,0x60,0x60,0x60,0x60,0x60,0x62,0x66,0xFE,0x00,0x00,0x00,0x00,    //Ascii Code=0x4C  'L'
 996          0x00,0x00,0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x4D  'M'
 997          0x00,0x00,0xC6,0xE6,0xF6,0xFE,0xDE,0xCE,0xC6,0xC6,0xC6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x4E  'N'
 998          0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x4F  'O'
 999          0x00,0x00,0xFC,0x66,0x66,0x66,0x7C,0x60,0x60,0x60,0x60,0xF0,0x00,0x00,0x00,0x00,    //Ascii Code=0x50  'P'
1000          0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xD6,0xDE,0x7C,0x0C,0x0E,0x00,0x00,    //Ascii Code=0x51  'Q'
1001          0x00,0x00,0xFC,0x66,0x66,0x66,0x7C,0x6C,0x66,0x66,0x66,0xE6,0x00,0x00,0x00,0x00,    //Ascii Code=0x52  'R'
1002          0x00,0x00,0x7C,0xC6,0xC6,0x60,0x38,0x0C,0x06,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x53  'S'
1003          0x00,0x00,0x7E,0x7E,0x5A,0x18,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x54  'T'
1004          0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x55  'U'
1005          0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x6C,0x38,0x10,0x00,0x00,0x00,0x00,    //Ascii Code=0x56  'V'
1006          0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xD6,0xD6,0xD6,0xFE,0xEE,0x6C,0x00,0x00,0x00,0x00,    //Ascii Code=0x57  'W'
1007          0x00,0x00,0xC6,0xC6,0x6C,0x7C,0x38,0x38,0x7C,0x6C,0xC6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x58  'X'
1008          0x00,0x00,0x66,0x66,0x66,0x66,0x3C,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x59  'Y'
1009          0x00,0x00,0xFE,0xC6,0x86,0x0C,0x18,0x30,0x60,0xC2,0xC6,0xFE,0x00,0x00,0x00,0x00,    //Ascii Code=0x5A  'Z'
1010          0x00,0x00,0x3C,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x5B  '['
1011          0x00,0x00,0x00,0x80,0xC0,0xE0,0x70,0x38,0x1C,0x0E,0x06,0x02,0x00,0x00,0x00,0x00,    //Ascii Code=0x5C  '\'
1012          0x00,0x00,0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x5D  ']'
1013          0x10,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x5E  '^'
1014          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,    //Ascii Code=0x5F  '_'
1015          0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x60  '`'
1016          0x00,0x00,0x00,0x00,0x00,0x78,0x0C,0x7C,0xCC,0xCC,0xCC,0x76,0x00,0x00,0x00,0x00,    //Ascii Code=0x61  'a'
1017          0x00,0x00,0xE0,0x60,0x60,0x78,0x6C,0x66,0x66,0x66,0x66,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x62  'b'
1018          0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xC0,0xC0,0xC0,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x63  'c'
1019          0x00,0x00,0x1C,0x0C,0x0C,0x3C,0x6C,0xCC,0xCC,0xCC,0xCC,0x76,0x00,0x00,0x00,0x00,    //Ascii Code=0x64  'd'
1020          0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xFE,0xC0,0xC0,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x65  'e'
1021          0x00,0x00,0x38,0x6C,0x64,0x60,0xF0,0x60,0x60,0x60,0x60,0xF0,0x00,0x00,0x00,0x00,    //Ascii Code=0x66  'f'
1022          0x00,0x00,0x00,0x00,0x00,0x76,0xCC,0xCC,0xCC,0xCC,0xCC,0x7C,0x0C,0xCC,0x78,0x00,    //Ascii Code=0x67  'g'
1023          0x00,0x00,0xE0,0x60,0x60,0x6C,0x76,0x66,0x66,0x66,0x66,0xE6,0x00,0x00,0x00,0x00,    //Ascii Code=0x68  'h'
1024          0x00,0x00,0x18,0x18,0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x69  'i'
1025          0x00,0x00,0x06,0x06,0x00,0x0E,0x06,0x06,0x06,0x06,0x06,0x06,0x66,0x66,0x3C,0x00,    //Ascii Code=0x6A  'j'
1026          0x00,0x00,0xE0,0x60,0x60,0x66,0x6C,0x78,0x78,0x6C,0x66,0xE6,0x00,0x00,0x00,0x00,    //Ascii Code=0x6B  'k'
1027          0x00,0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,0x00,0x00,0x00,    //Ascii Code=0x6C  'l'
1028          0x00,0x00,0x00,0x00,0x00,0xEC,0xFE,0xD6,0xD6,0xD6,0xD6,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x6D  'm'
1029          0x00,0x00,0x00,0x00,0x00,0xDC,0x66,0x66,0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,    //Ascii Code=0x6E  'n'
1030          0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0xC6,0xC6,0xC6,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x6F  'o'
1031          0x00,0x00,0x00,0x00,0x00,0xDC,0x66,0x66,0x66,0x66,0x66,0x7C,0x60,0x60,0xF0,0x00,    //Ascii Code=0x70  'p'
1032          0x00,0x00,0x00,0x00,0x00,0x76,0xCC,0xCC,0xCC,0xCC,0xCC,0x7C,0x0C,0x0C,0x1E,0x00,    //Ascii Code=0x71  'q'
1033          0x00,0x00,0x00,0x00,0x00,0xDC,0x76,0x66,0x60,0x60,0x60,0xF0,0x00,0x00,0x00,0x00,    //Ascii Code=0x72  'r'
1034          0x00,0x00,0x00,0x00,0x00,0x7C,0xC6,0x60,0x38,0x0C,0xC6,0x7C,0x00,0x00,0x00,0x00,    //Ascii Code=0x73  's'
1035          0x00,0x00,0x10,0x30,0x30,0xFC,0x30,0x30,0x30,0x30,0x36,0x1C,0x00,0x00,0x00,0x00,    //Ascii Code=0x74  't'
1036          0x00,0x00,0x00,0x00,0x00,0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0x76,0x00,0x00,0x00,0x00,    //Ascii Code=0x75  'u'
1037          0x00,0x00,0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x66,0x3C,0x18,0x00,0x00,0x00,0x00,    //Ascii Code=0x76  'v'
1038          0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xD6,0xD6,0xD6,0xFE,0x6C,0x00,0x00,0x00,0x00,    //Ascii Code=0x77  'w'
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 18  

1039          0x00,0x00,0x00,0x00,0x00,0xC6,0x6C,0x38,0x38,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00,    //Ascii Code=0x78  'x'
1040          0x00,0x00,0x00,0x00,0x00,0xC6,0xC6,0xC6,0xC6,0xC6,0xC6,0x7E,0x06,0x0C,0xF8,0x00,    //Ascii Code=0x79  'y'
1041          0x00,0x00,0x00,0x00,0x00,0xFE,0xCC,0x18,0x30,0x60,0xC6,0xFE,0x00,0x00,0x00,0x00,    //Ascii Code=0x7A  'z'
1042          0x00,0x00,0x0E,0x18,0x18,0x18,0x70,0x18,0x18,0x18,0x18,0x0E,0x00,0x00,0x00,0x00,    //Ascii Code=0x7B  '{'
1043          0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x18,0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,    //Ascii Code=0x7C  '|'
1044          0x00,0x00,0x70,0x18,0x18,0x18,0x0E,0x18,0x18,0x18,0x18,0x70,0x00,0x00,0x00,0x00,    //Ascii Code=0x7D  '}'
1045          0x00,0x00,0x76,0xDC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x7E  '~'
1046          0x00,0x00,0x00,0x00,0x10,0x38,0x6C,0xC6,0xC6,0xC6,0xFE,0x00,0x00,0x00,0x00,0x00,    //Ascii Code=0x7F  ''
1047          };
1048          
1049          
1050          
1051          
1052          /*
1053            电(0) 压(1) 电(2) 流(3) 计(4) 算(5) 机(6) 系(7) 检(8) 测(9) 系(10) 统(11) 继(12) 电(13) 器(14) 测(15)
1054            试(16) 铁(17) 道(18) 信(19) 号(20)
1055          */
1056          unsigned char code HZ_Bmp0[]={
1057          0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
1058          0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,/*"电",0*/
1059          /* (16 X 16 , 宋体 )*/
1060          };
1061          
1062          unsigned char code HZ_Bmp1[]={  
1063          0x00,0x00,0x3F,0xFE,0x20,0x00,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x80,0x2F,0xFC,
1064          0x20,0x80,0x20,0x80,0x20,0x90,0x20,0x88,0x20,0x88,0x40,0x80,0x5F,0xFE,0x80,0x00,/*"压",1*/
1065          /* (16 X 16 , 宋体 )*/
1066          };
1067          
1068          unsigned char code HZ_Bmp2[]={ 
1069          0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
1070          0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,/*"电",2*/
1071          /* (16 X 16 , 宋体 )*/
1072          };
1073          
1074          unsigned char code HZ_Bmp3[]={ 
1075          0x00,0x80,0x20,0x40,0x17,0xFE,0x10,0x80,0x81,0x10,0x42,0x08,0x47,0xFC,0x10,0x04,
1076          0x10,0x00,0x22,0x48,0xE2,0x48,0x22,0x48,0x22,0x48,0x22,0x4A,0x24,0x4A,0x08,0x46,/*"流",3*/
1077          /* (16 X 16 , 宋体 )*/
1078          };
1079          
1080          unsigned char code HZ_Bmp4[]={ 
1081          0x00,0x40,0x20,0x40,0x10,0x40,0x10,0x40,0x00,0x40,0x00,0x40,0xF7,0xFE,0x10,0x40,
1082          0x10,0x40,0x10,0x40,0x10,0x40,0x10,0x40,0x14,0x40,0x18,0x40,0x10,0x40,0x00,0x40,/*"计",4*/
1083          /* (16 X 16 , 宋体 )*/
1084          };
1085          
1086          unsigned char code HZ_Bmp5[]={ 
1087          0x20,0x40,0x3E,0x7E,0x48,0x90,0x80,0x00,0x3F,0xF8,0x20,0x08,0x3F,0xF8,0x20,0x08,
1088          0x3F,0xF8,0x20,0x08,0x3F,0xF8,0x08,0x20,0xFF,0xFE,0x08,0x20,0x10,0x20,0x20,0x20,/*"算",5*/
1089          /* (16 X 16 , 宋体 )*/
1090          };
1091          
1092          unsigned char code HZ_Bmp6[]={ 
1093          0x10,0x00,0x11,0xF0,0x11,0x10,0x11,0x10,0xFD,0x10,0x11,0x10,0x31,0x10,0x39,0x10,
1094          0x55,0x10,0x55,0x10,0x91,0x10,0x11,0x12,0x11,0x12,0x12,0x12,0x12,0x0E,0x14,0x00,/*"机",6*/
1095          /* (16 X 16 , 宋体 )*/
1096          };
1097          
1098          unsigned char code HZ_Bmp7[]={ 
1099          0x00,0xF8,0x3F,0x00,0x04,0x00,0x08,0x20,0x10,0x40,0x3F,0x80,0x01,0x00,0x06,0x10,
1100          0x18,0x08,0x7F,0xFC,0x01,0x04,0x09,0x20,0x11,0x10,0x21,0x08,0x45,0x04,0x02,0x00,/*"系",7*/
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 19  

1101          /* (16 X 16 , 宋体 )*/
1102          };
1103          
1104          unsigned char code HZ_Bmp8[]={ 
1105          0x10,0x40,0x10,0x40,0x10,0xA0,0x10,0xA0,0xFD,0x10,0x12,0x08,0x35,0xF6,0x38,0x00,
1106          0x54,0x88,0x50,0x48,0x92,0x48,0x11,0x50,0x11,0x10,0x10,0x20,0x17,0xFE,0x10,0x00,/*"检",8*/
1107          /* (16 X 16 , 宋体 )*/
1108          };
1109          
1110          unsigned char code HZ_Bmp9[]={ 
1111          0x00,0x04,0x27,0xC4,0x14,0x44,0x14,0x54,0x85,0x54,0x45,0x54,0x45,0x54,0x15,0x54,
1112          0x15,0x54,0x25,0x54,0xE5,0x54,0x21,0x04,0x22,0x84,0x22,0x44,0x24,0x14,0x08,0x08,/*"测",9*/
1113          /* (16 X 16 , 宋体 )*/
1114          };
1115          
1116          unsigned char code HZ_Bmp10[]={ 
1117          0x00,0xF8,0x3F,0x00,0x04,0x00,0x08,0x20,0x10,0x40,0x3F,0x80,0x01,0x00,0x06,0x10,
1118          0x18,0x08,0x7F,0xFC,0x01,0x04,0x09,0x20,0x11,0x10,0x21,0x08,0x45,0x04,0x02,0x00,/*"系",10*/
1119          /* (16 X 16 , 宋体 )*/
1120          };
1121          
1122          unsigned char code HZ_Bmp11[]={ 
1123          0x10,0x40,0x10,0x20,0x20,0x20,0x23,0xFE,0x48,0x40,0xF8,0x88,0x11,0x04,0x23,0xFE,
1124          0x40,0x92,0xF8,0x90,0x40,0x90,0x00,0x90,0x19,0x12,0xE1,0x12,0x42,0x0E,0x04,0x00,/*"统",11*/
1125          /* (16 X 16 , 宋体 )*/
1126          };
1127          
1128          unsigned char code HZ_Bmp12[]={ 
1129          0x10,0x20,0x12,0x20,0x22,0x20,0x23,0x24,0x4A,0xA8,0xF2,0x20,0x13,0xFC,0x22,0x20,
1130          0x42,0x70,0xFA,0xA8,0x43,0x24,0x02,0x20,0x1A,0x20,0xE2,0x20,0x43,0xFE,0x00,0x00,/*"继",12*/
1131          /* (16 X 16 , 宋体 )*/
1132          };
1133          
1134          unsigned char code HZ_Bmp13[]={ 
1135          0x01,0x00,0x01,0x00,0x01,0x00,0x3F,0xF8,0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,
1136          0x21,0x08,0x21,0x08,0x21,0x08,0x3F,0xF8,0x21,0x0A,0x01,0x02,0x01,0x02,0x00,0xFE,/*"电",13*/
1137          /* (16 X 16 , 宋体 )*/
1138          };
1139          
1140          unsigned char code HZ_Bmp14[]={ 
1141          0x00,0x00,0x3E,0x7C,0x22,0x44,0x22,0x44,0x3E,0x7C,0x01,0x20,0x01,0x10,0xFF,0xFE,
1142          0x02,0x80,0x0C,0x60,0x30,0x18,0xC0,0x06,0x3E,0x7C,0x22,0x44,0x22,0x44,0x3E,0x7C,/*"器",14*/
1143          /* (16 X 16 , 宋体 )*/
1144          };
1145          
1146          unsigned char code HZ_Bmp15[]={ 
1147          0x00,0x04,0x27,0xC4,0x14,0x44,0x14,0x54,0x85,0x54,0x45,0x54,0x45,0x54,0x15,0x54,
1148          0x15,0x54,0x25,0x54,0xE5,0x54,0x21,0x04,0x22,0x84,0x22,0x44,0x24,0x14,0x08,0x08,/*"测",15*/
1149          /* (16 X 16 , 宋体 )*/
1150          };
1151          
1152          unsigned char code HZ_Bmp16[]={ 
1153          0x00,0x28,0x20,0x24,0x10,0x24,0x10,0x20,0x07,0xFE,0x00,0x20,0xF0,0x20,0x17,0xE0,
1154          0x11,0x20,0x11,0x10,0x11,0x10,0x15,0x10,0x19,0xCA,0x17,0x0A,0x02,0x06,0x00,0x02,/*"试",16*/
1155          /* (16 X 16 , 宋体 )*/
1156          };
1157          
1158          unsigned char code HZ_Bmp17[]={ 
1159          0x10,0x20,0x10,0x20,0x3D,0x20,0x21,0x20,0x41,0xFC,0xBD,0x20,0x12,0x20,0x10,0x20,
1160          0xFD,0xFE,0x10,0x20,0x10,0x50,0x10,0x50,0x14,0x88,0x18,0x88,0x11,0x04,0x02,0x02,/*"铁",17*/
1161          /* (16 X 16 , 宋体 )*/
1162          };
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 20  

1163          
1164          unsigned char code HZ_Bmp18[]={ 
1165          0x02,0x08,0x21,0x10,0x10,0x00,0x17,0xFC,0x00,0x80,0x03,0xF8,0xF2,0x08,0x13,0xF8,
1166          0x12,0x08,0x13,0xF8,0x12,0x08,0x13,0xF8,0x12,0x08,0x28,0x00,0x47,0xFE,0x00,0x00,/*"道",18*/
1167          /* (16 X 16 , 宋体 )*/
1168          };
1169          
1170          unsigned char code HZ_Bmp19[]={ 
1171          0x08,0x40,0x08,0x20,0x0B,0xFE,0x10,0x00,0x10,0x00,0x31,0xFC,0x30,0x00,0x50,0x00,
1172          0x91,0xFC,0x10,0x00,0x10,0x00,0x11,0xFC,0x11,0x04,0x11,0x04,0x11,0xFC,0x11,0x04,/*"信",19*/
1173          /* (16 X 16 , 宋体 )*/
1174          };
1175          
1176          unsigned char code HZ_Bmp20[]={ 
1177          0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0xF0,0x00,0x00,0xFF,0xFE,
1178          0x08,0x00,0x10,0x00,0x1F,0xF0,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0xA0,0x00,0x40,/*"号",20*/
1179          /* (16 X 16 , 宋体 )*/
1180          };
1181          
1182          
1183          //11
1184          unsigned char code JDQ_Bmp11[]={
1185          /*--  调入了一幅图像：这是您新建的图像  --*/
1186          /*--  宽度x高度=32x16  --*/
1187          0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x02,0x20,0x00,0x00,0x0E,0x3E,
1188          0x00,0x00,0x32,0x20,0x00,0x00,0xC1,0xC0,0x03,0x83,0x00,0x00,0x04,0x4C,0x00,0x00,
1189          0x7C,0x70,0x00,0x00,0x04,0x4C,0x00,0x00,0x03,0x83,0x00,0x00,0x00,0x00,0xC1,0xC0,
1190          0x00,0x00,0x32,0x20,0x00,0x00,0x0E,0x3E,0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,
1191          };
1192          
1193          unsigned char code JDQ_Bmp00[]={
1194          /*--  调入了一幅图像：这是您新建的图像  --*/
1195          /*--  宽度x高度=32x16  --*/
1196          0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x02,0x20,0x00,0x00,0x02,0x3E,
1197          0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,0x03,0x80,0x00,0x00,0x04,0x40,0x00,0x00,
1198          0x7C,0x40,0x00,0x00,0x04,0x40,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x01,0xC0,
1199          0x00,0x00,0x02,0x20,0x00,0x00,0x02,0x3E,0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,
1200          };
1201          
1202          unsigned char code JDQ_Bmp01[]={
1203          /*--  调入了一幅图像：这是您新建的图像  --*/
1204          /*--  宽度x高度=32x16  --*/
1205          0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x02,0x20,0x00,0x00,0x02,0x3E,
1206          0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,0x03,0x80,0x00,0x00,0x04,0x40,0x00,0x00,
1207          0x7C,0x70,0x00,0x00,0x04,0x4C,0x00,0x00,0x03,0x83,0x00,0x00,0x00,0x00,0xC1,0xC0,
1208          0x00,0x00,0x32,0x20,0x00,0x00,0x0E,0x3E,0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,
1209          };
1210          
1211          unsigned char code JDQ_Bmp10[]={
1212          /*--  调入了一幅图像：这是您新建的图像  --*/
1213          /*--  宽度x高度=32x16  --*/
1214          0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xC0,0x00,0x00,0x02,0x20,0x00,0x00,0x0E,0x3E,
1215          0x00,0x00,0x32,0x20,0x00,0x00,0xC1,0xC0,0x03,0x83,0x00,0x00,0x04,0x4C,0x00,0x00,
1216          0x7C,0x70,0x00,0x00,0x04,0x40,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x01,0xC0,
1217          0x00,0x00,0x02,0x20,0x00,0x00,0x02,0x3E,0x00,0x00,0x02,0x20,0x00,0x00,0x01,0xC0,
1218          };
1219          
1220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4812    ----
C51 COMPILER V9.59.0.0   CHINESE_FONT_LIB                                                  12/18/2018 19:32:44 PAGE 21  

   CONSTANT SIZE    =   6400    ----
   XDATA SIZE       =    130      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
