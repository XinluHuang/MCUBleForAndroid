C51 COMPILER V9.59.0.0   SEGMENT                                                           12/18/2018 13:11:20 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE SEGMENT
OBJECT MODULE PLACED IN .\Objects\segment.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE segment.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\segment.lst) TABS(2) OBJECT(.\Objects\segment.obj)

line level    source

   1          #include "light.c"
   2          
   3          long NUMBER=0;
   4          char SECOND=0;
   5          char MINUTE=0;
   6          char HOUR=0;
   7          char SEGMENTS[8]={0};
   8          char POSITION=0;
   9          unsigned char c[]="120";
  10          unsigned char i=sizeof(c)-1;//隐含'\0'
  11          int sec=0;
  12          int btn=0;
  13          char pwm=0;//[0,10]
  14          char SEG_FLAG=0;//2按钮 1开关 0快慢   
  15          //set             0x04  0x02  0x01 判断 置1
  16          //clear           0xfb  0xfd  0xfe  清零
  17          
  18          //digital
  19          void initSegment();
  20          char setPoint(char i);
  21          char number2seg(char num);
  22          
  23          void setNumber(int num0);
  24          void setPosition(char seg);
  25          void showSegment();
  26          void setSecond(char sec);
  27          void setMinute(char min);
  28          void setHour(char hour);
  29          void setTime(char h,char m,char s);
  30          void addTime(char h,char m,char s);
  31          void initSegment();
  32          //time
  33          void T0Init_2ms();
  34          
  35          void t0() interrupt 1{
  36   1        showSegment();
  37   1        
  38   1        sec++;
  39   1        if(sec>=500){
  40   2          addTime(0,0,1);
  41   2          sec=0;
  42   2        }
  43   1        
  44   1        if(isBit(SEG_FLAG,1)){
  45   2          if(isBit(SEG_FLAG,0)) M=1;//快速
  46   2          else M=~M;
  47   2        }else M=0;
  48   1        
  49   1        //按钮
  50   1        if(btn<200) btn++;
  51   1        if(isBit(SEG_FLAG,2)){
  52   2          if(KB2==0){
  53   3            addTime(1,0,0);
  54   3            btn=0;
C51 COMPILER V9.59.0.0   SEGMENT                                                           12/18/2018 13:11:20 PAGE 2   

  55   3          }else if(KB3==0){
  56   3            addTime(0,1,0);
  57   3            btn=0;
  58   3          }else if(KB4==0){
  59   3            addTime(0,0,1);
  60   3            btn=0;
  61   3          }else if(KB5==0){
  62   3            //sendCharWith(c,3,'\0');
  63   3            btn=0;
  64   3          };
  65   2          SEG_FLAG=clearFlag(SEG_FLAG,2);
  66   2        }
  67   1        if((KB2==0||KB3==0||KB4==0||KB5==0) && btn>=200){
  68   2          SEG_FLAG=setFlag(SEG_FLAG,2);
  69   2        }
  70   1        
  71   1        //pwm
  72   1        pwm++;
  73   1        if(pwm>=10){
  74   2          pwm=0;
  75   2          breath();
  76   2        }
  77   1        
  78   1      }
  79          
  80          void T0Init_2ms(){
  81   1        //中断号1
  82   1        ET0=1;//允许中断
  83   1        EA=1;
  84   1        AUXR &= 0x7F;
  85   1        TMOD &= 0xF0;
  86   1        TL0 = 0xCD;
  87   1        TH0 = 0xF8;
  88   1        TF0 = 0;
  89   1        TR0 = 1;//开启定时
  90   1      }
  91          
  92          void showSegment(){
  93   1        POSITION++;
  94   1        POSITION%=8;
  95   1        setPosition(POSITION);
  96   1        P0=SEGMENTS[POSITION];
  97   1      }
  98          void setPosition(char seg){
  99   1        char t=0xff;
 100   1        switch(seg){
 101   2          case 0:t=0xfe;break;
 102   2          case 1:t=0xfd;break;
 103   2          case 2:t=0xfb;break;
 104   2          case 3:t=0xf7;break;
 105   2          case 4:t=0xef;break;
 106   2          case 5:t=0xdf;break;
 107   2          case 6:t=0xbf;break;
 108   2          case 7:t=0x7f;break;
 109   2          default:t=0xff;break;
 110   2        }
 111   1        P2=t;
 112   1      }
 113          
 114          void setNumber(long num){
*** WARNING C235 IN LINE 114 OF segment.c: parameter 1: different types
 115   1        char i=0;
C51 COMPILER V9.59.0.0   SEGMENT                                                           12/18/2018 13:11:20 PAGE 3   

 116   1        NUMBER=num;
 117   1        POSITION=0;
 118   1        //左边为个位
 119   1        for(i=0;i<8;i++){
 120   2          if(num!=0){
 121   3            SEGMENTS[i]=number2seg(num%10);
 122   3            num/=10;
 123   3          }else{
 124   3            SEGMENTS[i]=0;
 125   3          }
 126   2        }
 127   1      }
 128          
 129          void setSecond(char sec){
 130   1        char i=0;
 131   1        SECOND=sec;
 132   1        POSITION=0;
 133   1        if(sec>=60){
 134   2          sec%=60;
 135   2          MINUTE++;
 136   2        }
 137   1        //左边为个位
 138   1        for(i=0;i<2;i++){
 139   2          if(sec!=0){
 140   3            SEGMENTS[i]=number2seg(sec%10);
 141   3            sec/=10;
 142   3          }else{
 143   3            SEGMENTS[i]=number2seg(0);
 144   3          }
 145   2        }
 146   1        SEGMENTS[i]=0x40;
 147   1      }
 148          void setMinute(char min){
 149   1        char i=0;
 150   1        MINUTE=min;
 151   1        POSITION=0;
 152   1        if(min>=60){
 153   2          min%=60;
 154   2          HOUR++;
 155   2        }
 156   1        //左边为个位
 157   1        for(i=3;i<5;i++){
 158   2          if(min!=0){
 159   3            SEGMENTS[i]=number2seg(min%10);
 160   3            min/=10;
 161   3          }else{
 162   3            SEGMENTS[i]=number2seg(0);
 163   3          }
 164   2        }
 165   1        SEGMENTS[i]=0x40;
 166   1      }
 167          void setHour(char hour){
 168   1        char i=0;
 169   1        HOUR=hour;
 170   1        POSITION=0;
 171   1        if(hour>=24){
 172   2          hour%=24;
 173   2        }
 174   1        //左边为个位
 175   1        for(i=6;i<8;i++){
 176   2          if(hour!=0){
 177   3            SEGMENTS[i]=number2seg(hour%10);
C51 COMPILER V9.59.0.0   SEGMENT                                                           12/18/2018 13:11:20 PAGE 4   

 178   3            hour/=10;
 179   3          }else{
 180   3            SEGMENTS[i]=number2seg(0);
 181   3          }
 182   2        }
 183   1      }
 184          void addTime(char h,char m,char s){
 185   1        SECOND+=s;
 186   1        MINUTE+=m;
 187   1        HOUR+=h;
 188   1        if(SECOND>=60){
 189   2          SECOND%=60;
 190   2          MINUTE++;
 191   2        }
 192   1        if(MINUTE>=60){
 193   2          MINUTE%=60;
 194   2          HOUR++;
 195   2        }
 196   1        if(HOUR>=24){
 197   2          HOUR%=24;
 198   2        }
 199   1        setSecond(SECOND);
 200   1        setMinute(MINUTE);
 201   1        setHour(HOUR);
 202   1      }
 203          void setTime(char h,char m,char s){
 204   1        SECOND=s;
 205   1        MINUTE=m;
 206   1        HOUR=h;
 207   1        setSecond(SECOND);
 208   1        setMinute(MINUTE);
 209   1        setHour(HOUR);
 210   1      }
 211          char number2seg(char num){
 212   1        char t=0;
 213   1        switch(num){
 214   2          case 0:t=0x3f;break;
 215   2          case 1:t=0x06;break;
 216   2          case 2:t=0x5b;break;
 217   2          case 3:t=0x4f;break;
 218   2          case 4:t=0x66;break;
 219   2          case 5:t=0x6d;break;
 220   2          case 6:t=0x7d;break;
 221   2          case 7:t=0x07;break;
 222   2          case 8:t=0x7f;break;
 223   2          case 9:t=0x6f;break;
 224   2          default:t=0x40;break;
 225   2        }
 226   1        return t;
 227   1      }
 228          
 229          char setPoint(char i){
 230   1        return i|0x80;
 231   1      }
 232          void initSegment(){
 233   1        P0M0=0xff;
 234   1        P0M1=0;
 235   1        P2M0=0xff;
 236   1        P2M1=0;
 237   1        EA=1;
 238   1        T0Init_2ms();
 239   1      }
C51 COMPILER V9.59.0.0   SEGMENT                                                           12/18/2018 13:11:20 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2252    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =     30      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
